<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="C:\Users\Sylvestre\Dropbox\My Documents\Visual Studio 2010\Projects\Orchard\build\Compile\Orchard.Core.Tests.dll" total="1021" errors="0" failures="0" not-run="18" inconclusive="0" ignored="18" skipped="0" invalid="0" date="2012-09-18" time="14:34:40">
  <environment nunit-version="2.5.2.9222" clr-version="4.0.30319.269" os-version="Microsoft Windows NT 6.1.7601 Service Pack 1" platform="Win32NT" cwd="C:\Users\Sylvestre\Dropbox\My Documents\Visual Studio 2010\Projects\Orchard\build\Compile" machine-name="CAES-G5QT2R1" user="Sylvestre" user-domain="AESDEAN" />
  <culture-info current-culture="en-US" current-uiculture="en-US" />
  <test-suite name="" executed="True" success="True" time="106.190" asserts="0">
    <results>
      <test-suite name="C:\Users\Sylvestre\Dropbox\My Documents\Visual Studio 2010\Projects\Orchard\build\Compile\Orchard.Core.Tests.dll" executed="True" success="True" time="12.776" asserts="0">
        <results>
          <test-suite name="Orchard" executed="True" success="True" time="12.776" asserts="0">
            <results>
              <test-suite name="Core" executed="True" success="True" time="12.776" asserts="0">
                <results>
                  <test-suite name="Tests" executed="True" success="True" time="12.776" asserts="0">
                    <results>
                      <test-suite name="Body" executed="True" success="True" time="5.538" asserts="0">
                        <results>
                          <test-suite name="BodyPartTests" executed="True" success="True" time="5.522" asserts="0">
                            <results>
                              <test-case name="Orchard.Core.Tests.Body.BodyPartTests.BodyCanHandleLongText" executed="True" success="True" time="5.522" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Common" executed="True" success="True" time="4.415" asserts="0">
                        <results>
                          <test-suite name="Providers" executed="True" success="True" time="4.415" asserts="0">
                            <results>
                              <test-suite name="CommonPartProviderTests" executed="True" success="True" time="4.399" asserts="0">
                                <results>
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.CreatingShouldSetCreatedAndModifiedUtc" executed="True" success="True" time="0.406" asserts="3" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.EditingShouldSetModifiedUtc" executed="True" success="True" time="1.482" asserts="7" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.OwnerShouldBeNullAndZeroByDefault" executed="True" success="True" time="0.328" asserts="2" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.PublishingShouldFailIfOwnerIsEmpty" executed="True" success="True" time="0.593" asserts="1" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.PublishingShouldFailIfOwnerIsUnknown" executed="True" success="True" time="0.203" asserts="0" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.PublishingShouldNotFailIfOwnerIsEmptyAndShapeIsHidden" executed="True" success="True" time="0.172" asserts="1" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.PublishingShouldNotThrowExceptionIfOwnerIsNull" executed="True" success="True" time="0.172" asserts="0" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.PublishingShouldSetPublishUtcAndShouldNotChangeModifiedUtc" executed="True" success="True" time="0.156" asserts="6" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.PublishingTwiceShouldKeepSettingPublishUtcAndShouldNotChangeModifiedUtc" executed="True" success="True" time="0.172" asserts="9" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.UnpublishingShouldNotChangePublishUtcAndModifiedUtc" executed="True" success="True" time="0.156" asserts="9" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.UnpublishShouldClearFlagButLeaveMostrecentPublishDatesIntact" executed="True" success="True" time="0.374" asserts="11" />
                                  <test-case name="Orchard.Core.Tests.Common.Providers.CommonPartProviderTests.VersioningItemShouldCreatedAndPublishedUtcValuesPerVersion" executed="True" success="True" time="0.187" asserts="10" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Feeds" executed="True" success="True" time="0.140" asserts="0">
                        <results>
                          <test-suite name="Controllers" executed="True" success="True" time="0.140" asserts="0">
                            <results>
                              <test-suite name="FeedControllerTests" executed="True" success="True" time="0.140" asserts="0">
                                <results>
                                  <test-case name="Orchard.Core.Tests.Feeds.Controllers.FeedControllerTests.ControllerShouldReturnAnActionResult" executed="True" success="True" time="0.047" asserts="2" />
                                  <test-case name="Orchard.Core.Tests.Feeds.Controllers.FeedControllerTests.CorePartValuesAreExtracted" executed="True" success="True" time="0.078" asserts="4" />
                                  <test-case name="Orchard.Core.Tests.Feeds.Controllers.FeedControllerTests.InvalidFormatShpuldReturnNotFoundResult" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Core.Tests.Feeds.Controllers.FeedControllerTests.OneItemPerContentItemShouldBeCreated" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Orchard.Core.Tests.Feeds.Controllers.FeedControllerTests.RssFeedShouldBeStructuredAppropriately" executed="True" success="True" time="0.000" asserts="4" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Scheduling" executed="True" success="True" time="1.716" asserts="0">
                        <results>
                          <test-suite name="ScheduledTaskExecutorTests" executed="True" success="True" time="0.780" asserts="0">
                            <results>
                              <test-case name="Orchard.Core.Tests.Scheduling.ScheduledTaskExecutorTests.RecordsForTheFutureShouldBeIgnored" executed="True" success="True" time="0.203" asserts="1" />
                              <test-case name="Orchard.Core.Tests.Scheduling.ScheduledTaskExecutorTests.RecordsWhenTheyAreExecutedShouldBeDeleted" executed="True" success="True" time="0.203" asserts="2" />
                              <test-case name="Orchard.Core.Tests.Scheduling.ScheduledTaskExecutorTests.ScheduledTaskHandlersShouldBeCalledWhenTasksAreExecuted" executed="True" success="True" time="0.172" asserts="4" />
                              <test-case name="Orchard.Core.Tests.Scheduling.ScheduledTaskExecutorTests.SweepShouldBeCallable" executed="True" success="True" time="0.203" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="ScheduledTaskManagerTests" executed="True" success="True" time="0.936" asserts="0">
                            <results>
                              <test-case name="Orchard.Core.Tests.Scheduling.ScheduledTaskManagerTests.ShouldGetTasksByType" executed="True" success="True" time="0.187" asserts="4" />
                              <test-case name="Orchard.Core.Tests.Scheduling.ScheduledTaskManagerTests.ShouldGetTasksByTypeAndScheduledDate" executed="True" success="True" time="0.187" asserts="5" />
                              <test-case name="Orchard.Core.Tests.Scheduling.ScheduledTaskManagerTests.TaskManagerShouldCreateTaskRecordsWithOrWithoutContentItem" executed="True" success="True" time="0.203" asserts="6" />
                              <test-case name="Orchard.Core.Tests.Scheduling.ScheduledTaskManagerTests.TasksForAllVersionsOfContenItemShouldBeReturned" executed="True" success="True" time="0.187" asserts="5" />
                              <test-case name="Orchard.Core.Tests.Scheduling.ScheduledTaskManagerTests.TestFixtureShouldBeAbleToCreateContentItem" executed="True" success="True" time="0.172" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Settings" executed="True" success="True" time="0.967" asserts="0">
                        <results>
                          <test-suite name="Metadata" executed="True" success="True" time="0.967" asserts="0">
                            <results>
                              <test-suite name="ContentDefinitionManagerTests" executed="True" success="True" time="0.967" asserts="0">
                                <results>
                                  <test-case name="Orchard.Core.Tests.Settings.Metadata.ContentDefinitionManagerTests.ContentTypesCanBeDeleted" executed="True" success="True" time="0.218" asserts="2" />
                                  <test-case name="Orchard.Core.Tests.Settings.Metadata.ContentDefinitionManagerTests.ContentTypesWithSettingsCanBeCreatedAndModified" executed="True" success="True" time="0.140" asserts="5" />
                                  <test-case name="Orchard.Core.Tests.Settings.Metadata.ContentDefinitionManagerTests.GettingDefinitionsByNameCanReturnNullAndWillAcceptNullEmptyOrInvalidNames" executed="True" success="True" time="0.047" asserts="6" />
                                  <test-case name="Orchard.Core.Tests.Settings.Metadata.ContentDefinitionManagerTests.NoTypesAreAvailableByDefault" executed="True" success="True" time="0.031" asserts="1" />
                                  <test-case name="Orchard.Core.Tests.Settings.Metadata.ContentDefinitionManagerTests.PartsAreRemovedWhenNotReferencedButPartDefinitionRemains" executed="True" success="True" time="0.156" asserts="20" />
                                  <test-case name="Orchard.Core.Tests.Settings.Metadata.ContentDefinitionManagerTests.PartsCanBeDeleted" executed="True" success="True" time="0.094" asserts="9" />
                                  <test-case name="Orchard.Core.Tests.Settings.Metadata.ContentDefinitionManagerTests.StubPartDefinitionsAreCreatedWhenContentTypesAreStored" executed="True" success="True" time="0.062" asserts="7" />
                                  <test-case name="Orchard.Core.Tests.Settings.Metadata.ContentDefinitionManagerTests.TypeRecordsAreReturned" executed="True" success="True" time="0.062" asserts="1" />
                                  <test-case name="Orchard.Core.Tests.Settings.Metadata.ContentDefinitionManagerTests.TypeSettingsAreParsed" executed="True" success="True" time="0.047" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Users\Sylvestre\Dropbox\My Documents\Visual Studio 2010\Projects\Orchard\build\Compile\Orchard.Framework.Tests.dll" executed="True" success="True" time="36.739" asserts="0">
        <results>
          <test-suite name="Orchard" executed="True" success="True" time="36.739" asserts="0">
            <results>
              <test-suite name="Tests" executed="True" success="True" time="36.739" asserts="0">
                <results>
                  <test-suite name="Caching" executed="True" success="True" time="0.562" asserts="0">
                    <results>
                      <test-suite name="CacheScopeTests" executed="True" success="True" time="0.468" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Caching.CacheScopeTests.ComponentsAtHostLevelHaveAccessToCache" executed="True" success="True" time="0.406" asserts="1" />
                          <test-case name="Orchard.Tests.Caching.CacheScopeTests.HostLevelHasAccessToGlobalVolatileProviders" executed="True" success="True" time="0.031" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="CacheTests" executed="True" success="True" time="0.062" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Caching.CacheTests.CacheManagerShouldReturnCacheItem" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="Orchard.Tests.Caching.CacheTests.CacheManagerShouldReturnExistingCacheItem" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Caching.CacheTests.CacheModuleProvidesTypeSpecificManager" executed="True" success="True" time="0.031" asserts="12" />
                        </results>
                      </test-suite>
                      <test-suite name="ClockCachingTests" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Caching.ClockCachingTests.WhenAbsoluteShouldHandleAbsoluteTime" executed="True" success="True" time="0.031" asserts="14" />
                          <test-case name="Orchard.Tests.Caching.ClockCachingTests.WhenAbsoluteShouldHandleAbsoluteTimeSpan" executed="True" success="True" time="0.000" asserts="31" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Commands" executed="True" success="True" time="0.281" asserts="0">
                    <results>
                      <test-suite name="CommandHandlerDescriptorBuilderTests" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Commands.CommandHandlerDescriptorBuilderTests.BuilderShouldCreateDescriptor" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="Orchard.Tests.Commands.CommandHandlerDescriptorBuilderTests.BuilderShouldReturnPublicMethodsOnly" executed="True" success="True" time="0.016" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="CommandManagerTests" executed="True" success="True" time="0.234" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Commands.CommandManagerTests.ManagerCanRunACommand" executed="True" success="True" time="0.218" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandManagerTests.ManagerCanRunACompositeCommand" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="CommandsTests" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestBooleanSwitchForCommand" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestCaseInsensitiveForCommand" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestCommandArgumentsArePassedCorrectly" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestCommandArgumentsArePassedCorrectlyWithAParamsParameterAndNoArguments" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestCommandArgumentsArePassedCorrectlyWithAParamsParameters" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestCommandArgumentsArePassedCorrectlyWithNormalParametersAndAParamsParameters" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestCommandParamsMismatchWithoutParamsNotEnoughArguments" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestCommandParamsMismatchWithoutParamsTooManyArguments" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestCommandParamsMismatchWithParamsButNotEnoughArguments" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestCommandThatDoesNotReturnAValue" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestCommandWithCustomAlias" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestEmptyHelpText" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestFooCommand" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestHelpText" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestIntSwitchForCommand" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestNotExistingCommand" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestNotExistingSwitch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestStringSwitchForCommand" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Commands.CommandsTests.TestSwitchForCommandWithoutSupportForIt" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="ContentManagement" executed="True" success="True" time="9.001" asserts="0">
                    <results>
                      <test-suite name="ContentIdentityTests" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.ContentManagement.ContentIdentityTests.ContentIdentitiesAreEncodedWhenOutput" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentIdentityTests.ContentIdentityParsesIdentities" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="ContentQueryTests" executed="True" success="True" time="5.710" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.AllItemsAreReturnedByDefault" executed="True" success="True" time="1.435" asserts="5" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.ContentManagerPropertyIsSet" executed="True" success="True" time="0.390" asserts="3" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.CountReturnsNumber" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.EmptyWherePredicateRequiresRecord" executed="True" success="True" time="0.047" asserts="4" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.OrderMaySortOnJoinedRecord" executed="True" success="True" time="0.078" asserts="6" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.QueryForAllShouldReturnMultipleQualifiedVersions" executed="True" success="True" time="0.172" asserts="6" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.QueryForDraftShouldOnlyReturnLatestThatIsNotPublished" executed="True" success="True" time="0.047" asserts="6" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.QueryForLatestShouldNotReturnEarlierVersions" executed="True" success="True" time="0.031" asserts="6" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.QueryInstanceIsDifferentEachTimeYouCreateOne" executed="True" success="True" time="0.016" asserts="8" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.QueryShouldJoinVersionedRecords" executed="True" success="True" time="0.047" asserts="3" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.QueryShouldOnlyReturnPublishedByDefault" executed="True" success="True" time="0.062" asserts="6" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.SkipAndTakeProvidePagination" executed="True" success="True" time="0.047" asserts="4" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.SpecificTypeIsReturnedWhenSpecified" executed="True" success="True" time="0.047" asserts="10" />
                          <test-case name="Orchard.Tests.ContentManagement.ContentQueryTests.WherePredicateRestrictsResults" executed="True" success="True" time="0.031" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="DefaultContentManagerTests" executed="True" success="True" time="0.624" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.AlphaDriverShouldWeldItsPart" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.AlphaIsFlavoredAndStyledAndBetaIsFlavoredOnly" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.BigStringsShouldNotBeTruncated" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.CreateDraftShouldNotCreateExtraDraftCopies" executed="True" success="True" time="0.031" asserts="8" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.CreateShouldMakeModelAndContentTypeRecords" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.DraftRequiredShouldBuildNewVersionIfLatestIsAlreadyPublished" executed="True" success="True" time="0.078" asserts="11" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.DraftShouldBeLatestButNotPublished" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.EmptyTypeDefinitionShouldBeCreatedIfNotAlreadyDefined" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.ExistingTypeAndPartDefinitionShouldBeUsed" executed="True" success="True" time="0.078" asserts="6" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.FieldsCanBeWeldIntoParts" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.GetAllVersionsShouldReturnHistoryInOrder" executed="True" success="True" time="0.047" asserts="8" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.GetByIdShouldDetermineTypeAndLoadParts" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.GetContentTypesShouldReturnAllTypes" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.InitialVersionCanBeSpecifiedAndIsPublished" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.InitialVersionShouldBeOne" executed="True" success="True" time="0.016" asserts="13" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.ModelPartWithRecordShouldCallRepositoryToPopulate" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.NonVersionedPartsAreBoundToSameRecord" executed="True" success="True" time="0.016" asserts="14" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.PartGetReturnsFieldWithName" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.PublishedShouldBeLatestButNotDraft" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.StandardStringsShouldNotHaveAStandardSize" executed="True" success="True" time="0.140" asserts="0" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.StronglyTypedNewShouldThrowCastExceptionIfNull" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.StronglyTypedNewShouldTypeCast" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.ContentManagement.DefaultContentManagerTests.VersionedPartsShouldBeDifferentRecordsWithClonedData" executed="True" success="True" time="0.031" asserts="15" />
                        </results>
                      </test-suite>
                      <test-suite name="Drivers" executed="True" success="True" time="0.140" asserts="0">
                        <results>
                          <test-suite name="FieldStorage" executed="True" success="True" time="0.140" asserts="0">
                            <results>
                              <test-suite name="FieldStorageProviderSelectorTests" executed="True" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.ContentManagement.Drivers.FieldStorage.FieldStorageProviderSelectorTests.ShouldReturnInfosetWhenNullEmptyMissingOrInvalid" executed="True" success="True" time="0.016" asserts="4" />
                                  <test-case name="Orchard.Tests.ContentManagement.Drivers.FieldStorage.FieldStorageProviderSelectorTests.ShouldReturnProviderByName" executed="True" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-suite name="InfosetFieldStorageProviderTests" executed="True" success="True" time="0.125" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.ContentManagement.Drivers.FieldStorage.InfosetFieldStorageProviderTests.BoundStorageIsNotNull" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.ContentManagement.Drivers.FieldStorage.InfosetFieldStorageProviderTests.ChangingRecordDataHasImmediateEffectOnStorageAccessors" executed="True" success="True" time="0.109" asserts="1" />
                                  <test-case name="Orchard.Tests.ContentManagement.Drivers.FieldStorage.InfosetFieldStorageProviderTests.GettingUnsetNamedAndUnnamedValueIsSafeAndNull" executed="True" success="True" time="0.016" asserts="3" />
                                  <test-case name="Orchard.Tests.ContentManagement.Drivers.FieldStorage.InfosetFieldStorageProviderTests.NullAndEmptyValueNamesAreTreatedTheSame" executed="True" success="True" time="0.000" asserts="6" />
                                  <test-case name="Orchard.Tests.ContentManagement.Drivers.FieldStorage.InfosetFieldStorageProviderTests.RecordDataPropertyReflectsChangesToFields" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.ContentManagement.Drivers.FieldStorage.InfosetFieldStorageProviderTests.ValueThatIsSetIsAlsoReturned" executed="True" success="True" time="0.000" asserts="3" />
                                  <test-case name="Orchard.Tests.ContentManagement.Drivers.FieldStorage.InfosetFieldStorageProviderTests.VersionedSettingOnInfosetField" executed="False">
                                    <reason>
                                      <message><![CDATA[implementation pending]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="DynamicContentItemTests" executed="True" success="True" time="0.671" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.ContentManagement.DynamicContentItemTests.ActualPropertiesTakePriority" executed="True" success="True" time="0.577" asserts="1" />
                          <test-case name="Orchard.Tests.ContentManagement.DynamicContentItemTests.ContentItemProjectsPartNamesAsProperties" executed="True" success="True" time="0.047" asserts="1" />
                          <test-case name="Orchard.Tests.ContentManagement.DynamicContentItemTests.ContentItemPropertyOnPartRootsYou" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="Orchard.Tests.ContentManagement.DynamicContentItemTests.ContentPartsAlsoProjectPartNamesAsProperties" executed="True" success="True" time="0.031" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="DynamicContentQueryTests" executed="True" success="True" time="0.686" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.ContentManagement.DynamicContentQueryTests.EmptyWherePredicateRequiresRecord" executed="True" success="True" time="0.328" asserts="4" />
                          <test-case name="Orchard.Tests.ContentManagement.DynamicContentQueryTests.OrderMaySortOnJoinedRecord" executed="True" success="True" time="0.109" asserts="6" />
                          <test-case name="Orchard.Tests.ContentManagement.DynamicContentQueryTests.QueryShouldJoinVersionedRecords" executed="True" success="True" time="0.062" asserts="3" />
                          <test-case name="Orchard.Tests.ContentManagement.DynamicContentQueryTests.SkipAndTakeProvidePagination" executed="True" success="True" time="0.047" asserts="4" />
                          <test-case name="Orchard.Tests.ContentManagement.DynamicContentQueryTests.SpecificTypeIsReturnedWhenSpecified" executed="True" success="True" time="0.047" asserts="10" />
                          <test-case name="Orchard.Tests.ContentManagement.DynamicContentQueryTests.WherePredicateRestrictsResults" executed="True" success="True" time="0.031" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="Handlers" executed="True" success="True" time="0.094" asserts="0">
                        <results>
                          <test-suite name="ContentHandlerTests" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.ContentManagement.Handlers.ContentHandlerTests.ModelDriverShouldUsePersistenceFilterToDelegateCreateAndLoad" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.ContentManagement.Handlers.ContentHandlerTests.PartShouldBeAddedBasedOnSimplePredicate" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="Coordinators" executed="True" success="True" time="0.078" asserts="0">
                            <results>
                              <test-suite name="ContentPartDriverCoordinatorTests" executed="True" success="True" time="0.078" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.ContentManagement.Handlers.Coordinators.ContentPartDriverCoordinatorTests.AllDriversShouldBeCalled" executed="True" success="True" time="0.078" asserts="0" />
                                  <test-case name="Orchard.Tests.ContentManagement.Handlers.Coordinators.ContentPartDriverCoordinatorTests.DriverHandlerShouldNotThrowException" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Orchard.Tests.ContentManagement.Handlers.Coordinators.ContentPartDriverCoordinatorTests.TestDriverCanAddDisplay" executed="False">
                                    <reason>
                                      <message><![CDATA[no implementation for IZoneCollection]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="ModelBuilderTests" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.ContentManagement.Handlers.ModelBuilderTests.BuilderShouldReturnWorkingModelWithTypeAndId" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.ContentManagement.Handlers.ModelBuilderTests.IdShouldDefaultToZero" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.ContentManagement.Handlers.ModelBuilderTests.WeldShouldAddPartToModel" executed="True" success="True" time="0.016" asserts="4" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="HqlExpressionTests" executed="True" success="True" time="0.967" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.AllDataTypesCanBeQueried" executed="True" success="True" time="0.062" asserts="9" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorBetween" executed="True" success="True" time="0.078" asserts="15" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorEqProperty" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorGe" executed="True" success="True" time="0.094" asserts="24" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorGeProperty" executed="True" success="True" time="0.031" asserts="4" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorGt" executed="True" success="True" time="0.047" asserts="17" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorGtProperty" executed="True" success="True" time="0.031" asserts="4" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorIn" executed="True" success="True" time="0.062" asserts="17" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorInsensitiveLike" executed="True" success="True" time="0.062" asserts="10" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorIsNotNull" executed="True" success="True" time="0.031" asserts="3" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorIsNull" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorLe" executed="True" success="True" time="0.078" asserts="24" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorLeProperty" executed="True" success="True" time="0.031" asserts="4" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorLike" executed="True" success="True" time="0.031" asserts="10" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorLt" executed="True" success="True" time="0.047" asserts="17" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorLtProperty" executed="True" success="True" time="0.031" asserts="4" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorNot" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldQueryUsingOperatorNotEqProperty" executed="True" success="True" time="0.047" asserts="3" />
                          <test-case name="Orchard.Tests.ContentManagement.HqlExpressionTests.ShouldSortRandomly" executed="True" success="True" time="0.047" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="MetaData" executed="True" success="True" time="0.062" asserts="0">
                        <results>
                          <test-suite name="Builders" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-suite name="ContentTypeDefinitionBuilderTests" executed="True" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Builders.ContentTypeDefinitionBuilderTests.AddingPartWithSettings" executed="True" success="True" time="0.000" asserts="6" />
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Builders.ContentTypeDefinitionBuilderTests.CanAlterPartSettingsByNameDuringBuild" executed="True" success="True" time="0.016" asserts="6" />
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Builders.ContentTypeDefinitionBuilderTests.CanAlterPartSettingsByNameDuringRebuild" executed="True" success="True" time="0.000" asserts="13" />
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Builders.ContentTypeDefinitionBuilderTests.ContentMergeOverlaysSettings" executed="False">
                                    <reason>
                                      <message><![CDATA[Merging not yet implemented]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Builders.ContentTypeDefinitionBuilderTests.ContentRebuildWithModification" executed="True" success="True" time="0.000" asserts="10" />
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Builders.ContentTypeDefinitionBuilderTests.ContentRebuildWithoutModification" executed="True" success="True" time="0.000" asserts="5" />
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Builders.ContentTypeDefinitionBuilderTests.ContentTypeNameAndSettingsFromScratch" executed="True" success="True" time="0.000" asserts="4" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Services" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-suite name="ContentDefinitionReaderTests" executed="True" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Services.ContentDefinitionReaderTests.AttributesAreAppliedAsSettings" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Services.ContentDefinitionReaderTests.ChildElementsAreAddedAsPartsWithSettings" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Services.ContentDefinitionReaderTests.PartsCanBeRemovedByNameWhenImporting" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Services.ContentDefinitionReaderTests.ReadingElementSetsName" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                              <test-suite name="ContentDefinitionWriterTests" executed="True" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Services.ContentDefinitionWriterTests.ChildElementsArePartNames" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Services.ContentDefinitionWriterTests.CreatesElementWithEncodedContentTypeName" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Orchard.Tests.ContentManagement.MetaData.Services.ContentDefinitionWriterTests.TypeAndTypePartSettingsAreAttributes" executed="True" success="True" time="0.016" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Data" executed="True" success="True" time="2.746" asserts="0">
                    <results>
                      <test-suite name="Builders" executed="True" success="True" time="1.295" asserts="0">
                        <results>
                          <test-suite name="SessionFactoryBuilderTests" executed="True" success="True" time="1.295" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Data.Builders.SessionFactoryBuilderTests.SqlCeSchemaShouldBeGeneratedAndUsable" executed="True" success="True" time="0.078" asserts="1" />
                              <test-case name="Orchard.Tests.Data.Builders.SessionFactoryBuilderTests.SqlServerSchemaShouldBeGeneratedAndUsable" executed="True" success="True" time="1.217" asserts="0" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ProvidersTests" executed="True" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Data.ProvidersTests.SqlCeShouldHandleBigFields" executed="True" success="True" time="0.094" asserts="3" />
                          <test-case name="Orchard.Tests.Data.ProvidersTests.SqlServerShouldHandleBigFields" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite name="RepositoryTests" executed="True" success="True" time="1.357" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Data.RepositoryTests.GetByIdShouldReturnNullIfValueNotFound" executed="True" success="True" time="0.094" asserts="1" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.GetCanSelectSingleBasedOnFields" executed="True" success="True" time="0.078" asserts="1" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.GetThatReturnsTwoOrMoreShouldThrowException" executed="True" success="True" time="0.078" asserts="0" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.GetWithZeroMatchesShouldReturnNull" executed="True" success="True" time="0.094" asserts="1" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.LinqCanBeUsedToSelectObjects" executed="True" success="True" time="0.109" asserts="3" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.LinqExtensionMethodsCanAlsoBeUsedToSelectObjects" executed="True" success="True" time="0.094" asserts="3" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.LinqOrderByCanBeUsedToControlResults" executed="True" success="True" time="0.094" asserts="3" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.LinqOrderByCanBeUsedToControlResultsBug" executed="True" success="True" time="0.109" asserts="4" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.OrderShouldControlResults" executed="True" success="True" time="0.094" asserts="3" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.RangeShouldSliceResults" executed="True" success="True" time="0.125" asserts="3" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.RepositoryCanCreateFetchAndDelete" executed="True" success="True" time="0.094" asserts="1" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.RepositoryFetchTakesCompoundLambdaPredicate" executed="True" success="True" time="0.094" asserts="3" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.RepositoryFetchTakesSimpleLambdaPredicate" executed="True" success="True" time="0.094" asserts="2" />
                          <test-case name="Orchard.Tests.Data.RepositoryTests.StoringDateTimeDoesntRemovePrecision" executed="True" success="True" time="0.094" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="DataMigration" executed="True" success="True" time="0.920" asserts="0">
                    <results>
                      <test-suite name="DataMigrationTests" executed="True" success="True" time="0.234" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.DataMigration.DataMigrationTests.CreateCanBeFollowedByUpdates" executed="True" success="True" time="0.078" asserts="2" />
                          <test-case name="Orchard.Tests.DataMigration.DataMigrationTests.CreateShouldReturnVersionNumber" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.DataMigration.DataMigrationTests.DataMigrationImplShouldGetASchemaBuilder" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.DataMigration.DataMigrationTests.DataMigrationShouldDoNothingIfNoDataMigrationIsProvidedForFeature" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Orchard.Tests.DataMigration.DataMigrationTests.DataMigrationShouldDoNothingIfNoUpgradeOrCreateMethodWasFound" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.DataMigration.DataMigrationTests.DependenciesShouldBeUpgradedFirst" executed="True" success="True" time="0.031" asserts="4" />
                          <test-case name="Orchard.Tests.DataMigration.DataMigrationTests.SameMigrationClassCanEvolve" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.DataMigration.DataMigrationTests.SchemaBuilderShouldCreateSql" executed="True" success="True" time="0.016" asserts="0" />
                          <test-case name="Orchard.Tests.DataMigration.DataMigrationTests.ShouldDetectFeaturesThatNeedUpdates" executed="True" success="True" time="0.016" asserts="5" />
                        </results>
                      </test-suite>
                      <test-suite name="SchemaBuilderTestsBase" executed="True" success="True" time="0.686" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.DataMigration.SchemaBuilderTestsBase.AllMethodsShouldBeCalledSuccessfully" executed="True" success="True" time="0.156" asserts="0" />
                          <test-case name="Orchard.Tests.DataMigration.SchemaBuilderTestsBase.AlterTableCommandShouldBeHandled" executed="True" success="True" time="0.062" asserts="2" />
                          <test-case name="Orchard.Tests.DataMigration.SchemaBuilderTestsBase.BiggerDataShouldNotFit" executed="True" success="True" time="0.047" asserts="0" />
                          <test-case name="Orchard.Tests.DataMigration.SchemaBuilderTestsBase.ChangingSizeWithoutTypeShouldNotBeAllowed" executed="True" success="True" time="0.062" asserts="0" />
                          <test-case name="Orchard.Tests.DataMigration.SchemaBuilderTestsBase.CreateCommandShouldBeHandled" executed="True" success="True" time="0.062" asserts="0" />
                          <test-case name="Orchard.Tests.DataMigration.SchemaBuilderTestsBase.CustomSqlStatementsShouldBeHandled" executed="True" success="True" time="0.047" asserts="0" />
                          <test-case name="Orchard.Tests.DataMigration.SchemaBuilderTestsBase.DropTableCommandShouldBeHandled" executed="True" success="True" time="0.062" asserts="0" />
                          <test-case name="Orchard.Tests.DataMigration.SchemaBuilderTestsBase.ForeignKeyShouldBeCreatedAndRemoved" executed="True" success="True" time="0.062" asserts="0" />
                          <test-case name="Orchard.Tests.DataMigration.SchemaBuilderTestsBase.PrecisionAndScaleAreApplied" executed="True" success="True" time="0.062" asserts="1" />
                          <test-case name="Orchard.Tests.DataMigration.SchemaBuilderTestsBase.ShouldAllowFieldSizeAlteration" executed="True" success="True" time="0.047" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="DisplayManagement" executed="True" success="True" time="0.811" asserts="0">
                    <results>
                      <test-suite name="DefaultDisplayManagerTests" executed="True" success="True" time="0.062" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.DisplayManagement.DefaultDisplayManagerTests.DisplayingEventFiresEarlyEnoughToAddAlternateShapeBindingNames" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="Orchard.Tests.DisplayManagement.DefaultDisplayManagerTests.IShapeDisplayEventsIsCalled" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.DisplayManagement.DefaultDisplayManagerTests.RenderAlternateShapeByMostRecentlyAddedMatchingAlternate" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.DisplayManagement.DefaultDisplayManagerTests.RenderAlternateShapeExplicitly" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.DisplayManagement.DefaultDisplayManagerTests.RenderFallbackShape" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.DisplayManagement.DefaultDisplayManagerTests.RenderPreCalculatedShape" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.DisplayManagement.DefaultDisplayManagerTests.RenderSimpleShape" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.DisplayManagement.DefaultDisplayManagerTests.ShapeDescriptorDisplayingAndDisplayedAreCalled" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.DisplayManagement.DefaultDisplayManagerTests.ShapeTypeAndBindingNamesAreNotCaseSensitive" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="Descriptors" executed="True" success="True" time="0.234" asserts="0">
                        <results>
                          <test-suite name="BasicShapeTemplateHarvesterTests" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.BasicFileNamesComeBackAsShapes" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.ContentItemDisplayTypes" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.ContentItemDisplayTypes2" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.DashBecomesBreakingSeperator" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.DefaultItemsContentTemplate" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.DefaultItemsContentTemplate2" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.DotBecomesNonBreakingSeperator" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.ExplicitSpecializationMixedWithDisplayTypes" executed="True" success="True" time="0.016" asserts="6" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.ExplicitSpecializationMixedWithDisplayTypes2" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.ExplicitSpecializationOfItemsContentTemplate" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.ExplicitSpecializationOfItemsContentTemplate2" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.FieldNamesMayBeInSubfolderOrPrefixed" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.FieldNamesMayHaveLongOrShortAlternates" executed="True" success="True" time="0.000" asserts="12" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.ImplicitSpecializationOfItemsContentTemplate" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.ImplicitSpecializationOfItemsContentTemplate2" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.MultipleDotsAreNormalizedToUnderscore" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.BasicShapeTemplateHarvesterTests.MultipleDotsAreNormalizedToUnderscore2" executed="True" success="True" time="0.000" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite name="DefaultShapeTableManagerTests" executed="True" success="True" time="0.078" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.DefaultShapeTableManagerTests.CallbackAlterationsContributeToDescriptor" executed="True" success="True" time="0.047" asserts="4" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.DefaultShapeTableManagerTests.DefaultPlacementIsReturnedByDefault" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.DefaultShapeTableManagerTests.DefaultShapeTableIsReturnedForNullOrEmpty" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.DefaultShapeTableManagerTests.DerivedThemesCanOverrideBaseThemeShapeBindings" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.DefaultShapeTableManagerTests.DescribedPlacementIsReturnedIfNotNull" executed="True" success="True" time="0.016" asserts="6" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.DefaultShapeTableManagerTests.ManagerCanBeResolved" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.DefaultShapeTableManagerTests.OnlyShapesFromTheGivenThemeAreProvided" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.DefaultShapeTableManagerTests.PathConstraintShouldMatch" executed="True" success="True" time="0.016" asserts="7" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.DefaultShapeTableManagerTests.ShapesFromTheBaseThemeAreProvided" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.DefaultShapeTableManagerTests.TwoArgumentVariationDoesSameThing" executed="True" success="True" time="0.000" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite name="PlacementFileParserTests" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.PlacementFileParserTests.EachPlaceAttributeIsShapeLocation" executed="True" success="True" time="0.016" asserts="5" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.PlacementFileParserTests.ItemsComeBackAsPlacementNodes" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.PlacementFileParserTests.NestedItemsComeBackAsNestedNodes" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.PlacementFileParserTests.ParsingEmptyFileAsNothing" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.PlacementFileParserTests.ParsingMissingFileIsNull" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="ShapeAttributeBindingStrategyTests" executed="True" success="True" time="0.062" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.ShapeAttributeBindingStrategyTests.BindingProvidedByStrategyInvokesMethod" executed="True" success="True" time="0.047" asserts="2" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.ShapeAttributeBindingStrategyTests.FeatureMetadataIsDetected" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.ShapeAttributeBindingStrategyTests.InitializersHaveExpectedShapeTypeNames" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.ShapeAttributeBindingStrategyTests.LifetimeScopeContainersHaveMetadata" executed="True" success="True" time="0.016" asserts="3" />
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.ShapeAttributeBindingStrategyTests.ShapeAttributeOccurrencesAreDetected" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="ShapeTemplateBindingStrategyTests" executed="True" success="True" time="0.031" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.ShapeTemplateBindingStrategyTests.TemplateResolutionWorks" executed="True" success="True" time="0.031" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="StylesheetBindingStrategyTests" executed="True" success="True" time="0.031" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.DisplayManagement.Descriptors.StylesheetBindingStrategyTests.TemplateResolutionWorks" executed="True" success="True" time="0.031" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ShapeFactoryTests" executed="True" success="True" time="0.187" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.DisplayManagement.ShapeFactoryTests.CreateShapeWithNamedArguments" executed="True" success="True" time="0.172" asserts="0" />
                          <test-case name="Orchard.Tests.DisplayManagement.ShapeFactoryTests.ShapeHasAttributesType" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ShapeHelperTests" executed="True" success="True" time="0.234" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.DisplayManagement.ShapeHelperTests.CreatingNewShapeTypeByName" executed="True" success="True" time="0.172" asserts="1" />
                          <test-case name="Orchard.Tests.DisplayManagement.ShapeHelperTests.CreatingShapeWithAdditionalNamedParameters" executed="True" success="True" time="0.031" asserts="3" />
                          <test-case name="Orchard.Tests.DisplayManagement.ShapeHelperTests.WithPropertyBearingObjectInsteadOfNamedParameters" executed="True" success="True" time="0.031" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="SubsystemTests" executed="True" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.DisplayManagement.SubsystemTests.RenderingSomething" executed="True" success="True" time="0.094" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Environment" executed="True" success="True" time="2.012" asserts="0">
                    <results>
                      <test-suite name="AutofacUtil" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-suite name="AutofacTests" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.AutofacUtil.AutofacTests.EnumerablesFromDifferentLifetimeScopesShouldReturnDifferentCollections" description="Exercises a problem in a previous version, to make sure older Autofac.dll isn't picked up" executed="True" success="True" time="0.000" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite name="DynamicProxy2" executed="True" success="True" time="0.031" asserts="0">
                            <results>
                              <test-suite name="DynamicProxyTests" executed="True" success="True" time="0.031" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Environment.AutofacUtil.DynamicProxy2.DynamicProxyTests.AddProxyCanBeCalledMoreThanOnce" executed="True" success="True" time="0.000" asserts="4" />
                                  <test-case name="Orchard.Tests.Environment.AutofacUtil.DynamicProxy2.DynamicProxyTests.ContextAddedToMetadataWhenRegistered" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Environment.AutofacUtil.DynamicProxy2.DynamicProxyTests.InterceptorAddedToContextFromModules" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Orchard.Tests.Environment.AutofacUtil.DynamicProxy2.DynamicProxyTests.InterceptorCatchesMethodCallOnlyFromContainerWithInterceptor" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Orchard.Tests.Environment.AutofacUtil.DynamicProxy2.DynamicProxyTests.ProxyContextReturnsTrueIfTypeHasBeenProxied" executed="True" success="True" time="0.000" asserts="6" />
                                  <test-case name="Orchard.Tests.Environment.AutofacUtil.DynamicProxy2.DynamicProxyTests.ResolvedObjectIsSubclass" executed="True" success="True" time="0.016" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Blueprint" executed="True" success="True" time="0.452" asserts="0">
                        <results>
                          <test-suite name="DefaultShellDescriptorCacheTests" executed="True" success="True" time="0.452" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.Blueprint.DefaultShellDescriptorCacheTests.AllDataWillRoundTrip" executed="True" success="True" time="0.452" asserts="3" />
                              <test-case name="Orchard.Tests.Environment.Blueprint.DefaultShellDescriptorCacheTests.FetchReturnsNullForCacheMiss" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Blueprint.DefaultShellDescriptorCacheTests.SecondCallUpdatesData" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.Blueprint.DefaultShellDescriptorCacheTests.StoreCanBeCalledMoreThanOnceOnTheSameName" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Configuration" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-suite name="DefaultTenantManagerTests" executed="True" success="True" time="0.031" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.Configuration.DefaultTenantManagerTests.EncryptionSettingsAreStoredAndReadable" executed="True" success="True" time="0.016" asserts="5" />
                              <test-case name="Orchard.Tests.Environment.Configuration.DefaultTenantManagerTests.MultipleFilesCanBeDetected" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="Orchard.Tests.Environment.Configuration.DefaultTenantManagerTests.NewSettingsCanBeStored" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="Orchard.Tests.Environment.Configuration.DefaultTenantManagerTests.SingleSettingsFileShouldComeBackAsExpected" executed="True" success="True" time="0.000" asserts="4" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="DefaultCompositionStrategyTests" executed="True" success="True" time="0.094" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Environment.DefaultCompositionStrategyTests.BlueprintIsNotNull" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.DefaultCompositionStrategyTests.ControllersArePutIntoBlueprintWithAreaAndControllerName" executed="True" success="True" time="0.016" asserts="9" />
                          <test-case name="Orchard.Tests.Environment.DefaultCompositionStrategyTests.CoreRecordsAreAddedAutomatically" executed="True" success="True" time="0.016" asserts="6" />
                          <test-case name="Orchard.Tests.Environment.DefaultCompositionStrategyTests.DataPrefixChangesTableName" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="Orchard.Tests.Environment.DefaultCompositionStrategyTests.DependenciesAreGivenParameters" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="Orchard.Tests.Environment.DefaultCompositionStrategyTests.DependenciesFromFeatureArePutIntoBlueprint" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="Orchard.Tests.Environment.DefaultCompositionStrategyTests.FeatureReplacement" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="Orchard.Tests.Environment.DefaultCompositionStrategyTests.ModulesArePutIntoBlueprint" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Environment.DefaultCompositionStrategyTests.RecordsArePutIntoBlueprintWithTableName" executed="True" success="True" time="0.016" asserts="4" />
                        </results>
                      </test-suite>
                      <test-suite name="DefaultOrchardHostTests" executed="True" success="True" time="0.484" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Environment.DefaultOrchardHostTests.NormalDependenciesShouldBeUniquePerRequestContainer" executed="False">
                            <reason>
                              <message><![CDATA[containers are disposed when calling BeginRequest, maybe by the StubVirtualPathMonitor]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Orchard.Tests.Environment.DefaultOrchardHostTests.SingletonDependenciesShouldBeUniquePerShell" executed="True" success="True" time="0.406" asserts="4" />
                          <test-case name="Orchard.Tests.Environment.DefaultOrchardHostTests.TransientDependenciesShouldBeUniquePerResolve" executed="True" success="True" time="0.078" asserts="11" />
                        </results>
                      </test-suite>
                      <test-suite name="DefaultOrchardShellTests" executed="False">
                        <reason>
                          <message><![CDATA[DefaultOrchardShellTests does not have any tests]]></message>
                        </reason>
                      </test-suite>
                      <test-suite name="DefaultWorkContextAccessorTests" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Environment.DefaultWorkContextAccessorTests.ContextIsNullAfterDisposingScope" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.Environment.DefaultWorkContextAccessorTests.DifferentChildScopesWillNotCollideInTheSameHttpContext" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="Orchard.Tests.Environment.DefaultWorkContextAccessorTests.DifferentChildScopesWillNotCollideWithoutAmbientHttpContext" executed="True" success="True" time="0.000" asserts="10" />
                          <test-case name="Orchard.Tests.Environment.DefaultWorkContextAccessorTests.DifferentHttpContextWillHoldDifferentWorkContext" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="Orchard.Tests.Environment.DefaultWorkContextAccessorTests.FunctionsByDefaultAgainstAmbientHttpContext" executed="True" success="True" time="0.016" asserts="10" />
                          <test-case name="Orchard.Tests.Environment.DefaultWorkContextAccessorTests.ScopeIsCreatedAndCanBeRetrievedFromHttpContextBase" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Environment.DefaultWorkContextAccessorTests.StillFunctionsWithoutAmbientHttpContext" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="Extensions" executed="True" success="True" time="0.172" asserts="0">
                        <results>
                          <test-suite name="ExtensionFoldersTests" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionFoldersTests.IdsFromFoldersWithModuleTxtShouldBeListed" executed="True" success="True" time="0.031" asserts="6" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionFoldersTests.ModuleTxtShouldBeParsedAndReturnedAsYamlDocument" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionFoldersTests.NamesFromFoldersWithModuleTxtShouldFallBackToIdIfNotGiven" executed="True" success="True" time="0.016" asserts="6" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionFoldersTests.PathsFromFoldersWithModuleTxtShouldFallBackAppropriatelyIfNotGiven" executed="True" success="True" time="0.000" asserts="6" />
                            </results>
                          </test-suite>
                          <test-suite name="ExtensionLoaderCoordinatorTests" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.AvailableExtensionsShouldFollowCatalogLocations" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ExtensionDescriptorsShouldBeParsedForCompleteModuleTxt" executed="True" success="True" time="0.000" asserts="32" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ExtensionDescriptorsShouldBeParsedForCompleteModuleTxtWithSimpleFormat" executed="True" success="True" time="0.016" asserts="32" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ExtensionDescriptorsShouldBeParsedForMinimalModuleTxt" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ExtensionDescriptorsShouldBeParsedForMinimalModuleTxtWithSimpleFormat" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ExtensionDescriptorsShouldHaveNameAndVersion" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ExtensionManagerFeaturesContainNonAbstractClasses" executed="True" success="True" time="0.016" asserts="6" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ExtensionManagerLoadFeatureDoesNotReturnTypesFromNonMatchingFeatures" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ExtensionManagerLoadFeatureReturnsTypesFromSpecificFeaturesWithFeatureAttribute" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ExtensionManagerShouldLoadFeatures" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ExtensionManagerTestFeatureAttribute" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ModuleNameIsIntroducedAsFeatureImplicitly" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionLoaderCoordinatorTests.ThemeNameIsIntroducedAsFeatureImplicitly" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="ExtensionManagerTests" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.AvailableExtensionsShouldFollowCatalogLocations" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ExtensionDescriptorKeywordsAreCaseInsensitive" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ExtensionDescriptorsShouldBeParsedForCompleteModuleTxt" executed="True" success="True" time="0.000" asserts="32" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ExtensionDescriptorsShouldBeParsedForMinimalModuleTxt" executed="True" success="True" time="0.016" asserts="7" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ExtensionDescriptorsShouldHaveNameAndVersion" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ExtensionManagerFeaturesContainNonAbstractClasses" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ExtensionManagerLoadFeatureDoesNotReturnTypesFromNonMatchingFeatures" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ExtensionManagerLoadFeatureReturnsTypesFromSpecificFeaturesWithFeatureAttribute" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ExtensionManagerShouldLoadFeatures" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ExtensionManagerShouldReturnEmptyFeatureIfFeatureDoesNotExist" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ExtensionManagerTestFeatureAttribute" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.FeatureDescriptorsAreInDependencyAndPriorityOrder" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.FeatureDescriptorsAreInDependencyOrder" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.FeatureDescriptorsAreInManifestOrderWhenTheyHaveEqualPriority" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.FeatureDescriptorsAreInPriorityOrder" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.FeatureDescriptorsShouldBeLoadedInThemes" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ModuleNameIsIntroducedAsFeatureImplicitly" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.Extensions.ExtensionManagerTests.ThemeFeatureDescriptorsShouldBeAbleToDependOnModules" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Features" executed="True" success="True" time="0.437" asserts="0">
                        <results>
                          <test-suite name="FeatureManagerTests" executed="True" success="True" time="0.437" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.Features.FeatureManagerTests.DisableFeaturesTest" executed="True" success="True" time="0.203" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.Features.FeatureManagerTests.DisableFeaturesWithDependenciesTest" executed="True" success="True" time="0.094" asserts="6" />
                              <test-case name="Orchard.Tests.Environment.Features.FeatureManagerTests.EnableFeaturesTest" executed="True" success="True" time="0.062" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.Features.FeatureManagerTests.EnableFeaturesWithDependenciesTest" executed="True" success="True" time="0.078" asserts="5" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Loaders" executed="True" success="True" time="0.062" asserts="0">
                        <results>
                          <test-suite name="DynamicExtensionLoaderTests" executed="True" success="True" time="0.062" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.Loaders.DynamicExtensionLoaderTests.GetDependenciesContainsNoDuplicatesEvenIfMultipleProjectsTest" executed="True" success="True" time="0.062" asserts="8" />
                              <test-case name="Orchard.Tests.Environment.Loaders.DynamicExtensionLoaderTests.GetDependenciesContainsNoDuplicatesTest" executed="True" success="True" time="0.000" asserts="4" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="OrchardStarterTests" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Environment.OrchardStarterTests.ContainerResolvesServicesInSameOrderTheyAreRegistered" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="Orchard.Tests.Environment.OrchardStarterTests.DefaultOrchardHostInstanceReturnedByCreateHost" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.OrchardStarterTests.MostRecentlyRegisteredServiceReturnsFromSingularResolve" executed="True" success="True" time="0.016" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="RunningShellTableTests" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.AnotherShellMatchesByHostHeader" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.DefaultCatchallIsFallbackEvenWhenOthersAreUnqualified" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.DefaultShellMatchesByDefault" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.DefaultStillCatchesWhenOtherShellsMiss" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.DefaultWillCatchRequestsIfItMatchesCriteria" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.DefaultWontFallbackIfItHasCriteria" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.HostNameMatchesRightmostIfRequestIsLonger" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.LongestMatchingHostHasPriority" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.MultipleHostsOnShellAreAdded" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.NonDefaultCatchallWillFallbackIfNothingElseMatches" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.NoShellsGiveNoMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.PathAloneWillMatch" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.PathAlsoCausesMatch" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.PathAndHostMustBothMatch" executed="True" success="True" time="0.000" asserts="13" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.ShellNameUsedToDistinctThingsAsTheyAreAdded" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="Orchard.Tests.Environment.RunningShellTableTests.ThereIsNoFallbackIfMultipleSitesAreUnqualifiedButDefaultIsNotOneOfThem" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="ShellBuilders" executed="True" success="True" time="0.094" asserts="0">
                        <results>
                          <test-suite name="DefaultShellContainerFactoryTests" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContainerFactoryTests.ControllersAreRegisteredAsKeyedServices" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContainerFactoryTests.DependenciesAreResolvable" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContainerFactoryTests.DynamicProxyAndShellSettingsAreResolvableToSameInstances" executed="True" success="True" time="0.000" asserts="10" />
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContainerFactoryTests.DynamicProxyIsInEffect" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContainerFactoryTests.ExtraInformationCanDropIntoProperties" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContainerFactoryTests.ModulesAreResolvedAndRegistered" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContainerFactoryTests.ModulesMayResolveHostServices" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContainerFactoryTests.ParametersMayOrMayNotBeUsedAsPropertiesAndConstructorParameters" executed="True" success="True" time="0.016" asserts="5" />
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContainerFactoryTests.ShouldReturnChildLifetimeScopeNamedShell" executed="True" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite name="DefaultShellContextFactoryTests" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContextFactoryTests.CreatingSetupContextUsesOrchardSetupFeature" executed="True" success="True" time="0.031" asserts="1" />
                              <test-case name="Orchard.Tests.Environment.ShellBuilders.DefaultShellContextFactoryTests.NormalExecutionReturnsExpectedObjects" executed="True" success="True" time="0.016" asserts="5" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="State" executed="True" success="True" time="0.062" asserts="0">
                        <results>
                          <test-suite name="DefaultProcessingEngineTests" executed="True" success="True" time="0.062" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.State.DefaultProcessingEngineTests.CallingAddTaskReturnsResultIdentifierAndCausesPendingToBeTrue" executed="True" success="True" time="0.016" asserts="4" />
                              <test-case name="Orchard.Tests.Environment.State.DefaultProcessingEngineTests.CallingExecuteCausesEventToFireAndPendingFlagToBeCleared" executed="True" success="True" time="0.031" asserts="3" />
                              <test-case name="Orchard.Tests.Environment.State.DefaultProcessingEngineTests.ExecuteTaskIsSafeToCallWhenItDoesNothing" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.State.DefaultProcessingEngineTests.NoTasksPendingByDefault" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Warmup" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-suite name="WarmupUtilityTests" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Environment.Warmup.WarmupUtilityTests.EmptyStringsAreNotAllowed" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.Warmup.WarmupUtilityTests.EncodedUrlsShouldBeValidFilenames" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Environment.Warmup.WarmupUtilityTests.EncodedUrlsShouldPreserveQueryStrings" executed="True" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Events" executed="True" success="True" time="0.062" asserts="0">
                    <results>
                      <test-suite name="EventTests" executed="True" success="True" time="0.062" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Events.EventTests.EnumerableResultsAreTreatedLikeSelectMany" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventBusThrowsIfMessageNameIsNotCorrectlyFormatted" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventHandlerWontBeCalledWhenNoParameterMatchExists" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventHandlerWontBeCalledWhenNoParameterMatchExists2" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventHandlerWontThrowIfMethodDoesNotExists" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventParametersAreCorrectlyPassedToBestMatchingMethodAndExtraParametersAreIgnored" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventParametersAreCorrectlyPassedToBestMatchingMethodAndExtraParametersAreIgnored2" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventParametersAreCorrectlyPassedToEventHandlers" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventParametersAreCorrectlyPassedToExactlyMatchingMethod" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventParametersAreCorrectlyPassedToExactlyMatchingMethodWhenThereIsOne" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventParametersAreCorrectlyPassedToExactlyMatchingMethodWhenThereIsOne2" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventParametersAreCorrectlyPassedToMatchingMethod" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventParametersArePassedInCorrectOrderToEventHandlers" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.EventsAreCorrectlyDispatchedToEventHandlers" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Events.EventTests.InterceptorCanCoerceResultingCollection" executed="True" success="True" time="0.000" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="EventsTests" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-case name="Orchard.Tests.EventsTests.AllEventsAreCalled" executed="True" success="True" time="0.016" asserts="2" />
                      <test-case name="Orchard.Tests.EventsTests.AnExceptionShouldBeLoggedAndOtherEventsWillBeFired" executed="True" success="True" time="0.000" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="FakeTests" executed="True" success="True" time="0.000" asserts="0">
                    <results>
                      <test-case name="Orchard.Tests.FakeTests.ExceptionsCanBeVerified" executed="True" success="True" time="0.000" asserts="0" />
                      <test-case name="Orchard.Tests.FakeTests.TestShouldRunFromResharper" executed="True" success="True" time="0.000" asserts="1" />
                    </results>
                  </test-suite>
                  <test-suite name="FileSystems" executed="True" success="True" time="17.894" asserts="0">
                    <results>
                      <test-suite name="AppData" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-suite name="AppDataFolderTests" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.FileSystems.AppData.AppDataFolderTests.CreateFileWillCauseDirectoryToBeCreated" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.FileSystems.AppData.AppDataFolderTests.FileExistsReturnsFalseForNonExistingFile" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.AppData.AppDataFolderTests.FileExistsReturnsTrueForExistingFile" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.AppData.AppDataFolderTests.FilesCanBeReadBack" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.AppData.AppDataFolderTests.ListFilesShouldContainSubPathAndFileName" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.FileSystems.AppData.AppDataFolderTests.ListSubdirectoriesShouldContainFullSubpath" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.FileSystems.AppData.AppDataFolderTests.ListSubdirectoriesShouldWorkInRoot" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.FileSystems.AppData.AppDataFolderTests.NonExistantFolderShouldListAsEmptyCollection" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.AppData.AppDataFolderTests.NonExistantFolderShouldListDirectoriesAsEmptyCollection" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.AppData.AppDataFolderTests.PhysicalPathAddsToBasePathAndDoesNotNeedToExist" executed="True" success="True" time="0.016" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Dependencies" executed="True" success="True" time="0.062" asserts="0">
                        <results>
                          <test-suite name="AssemblyProbingFolderTests" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.FileSystems.Dependencies.AssemblyProbingFolderTests.DeleteAssemblyShouldNotThrowIfAssemblyNotFound" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Orchard.Tests.FileSystems.Dependencies.AssemblyProbingFolderTests.FolderShouldBeEmptyByDefault" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.Dependencies.AssemblyProbingFolderTests.GetAssemblyDateTimeUtcShouldThrowIfAssemblyNotFound" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.Dependencies.AssemblyProbingFolderTests.LoadAssemblyShouldNotThrowIfAssemblyNotFound" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.Dependencies.AssemblyProbingFolderTests.StoreAssemblyShouldCopyFile" executed="True" success="True" time="0.016" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite name="DependenciesFolderTests" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.FileSystems.Dependencies.DependenciesFolderTests.LoadDescriptorsShouldReturnEmptyList" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.Dependencies.DependenciesFolderTests.LoadDescriptorsShouldWorkAcrossInstances" executed="True" success="True" time="0.016" asserts="4" />
                              <test-case name="Orchard.Tests.FileSystems.Dependencies.DependenciesFolderTests.StoreDescriptorsShouldNoOpIfNoChanges" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.Dependencies.DependenciesFolderTests.StoreDescriptorsShouldStoreIfChanges" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.FileSystems.Dependencies.DependenciesFolderTests.StoreDescriptorsShouldWork" executed="True" success="True" time="0.000" asserts="4" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="LockFile" executed="True" success="True" time="17.785" asserts="0">
                        <results>
                          <test-suite name="LockFileManagerTests" executed="True" success="True" time="17.769" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.FileSystems.LockFile.LockFileManagerTests.AcquiringLockShouldBeThreadSafe" executed="True" success="True" time="13.542" asserts="21" />
                              <test-case name="Orchard.Tests.FileSystems.LockFile.LockFileManagerTests.DisposingLockShouldReleaseIt" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.FileSystems.LockFile.LockFileManagerTests.ExistingLockFileShouldPreventGrants" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.FileSystems.LockFile.LockFileManagerTests.ExpiredLockShouldBeAvailable" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.FileSystems.LockFile.LockFileManagerTests.IsLockedShouldBeThreadSafe" executed="True" success="True" time="4.228" asserts="21" />
                              <test-case name="Orchard.Tests.FileSystems.LockFile.LockFileManagerTests.LockShouldBeGrantedWhenDoesNotExist" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.FileSystems.LockFile.LockFileManagerTests.ReleasingALockShouldAllowGranting" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.FileSystems.LockFile.LockFileManagerTests.ReleasingAReleasedLockShouldWork" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="Orchard.Tests.FileSystems.LockFile.LockFileManagerTests.ShouldGrantExpiredLock" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="VirtualPath" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-suite name="DefaultVirtualPathProviderTests" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.FileSystems.VirtualPath.DefaultVirtualPathProviderTests.RejectMalformedVirtualPathTests" executed="True" success="True" time="0.000" asserts="14" />
                              <test-case name="Orchard.Tests.FileSystems.VirtualPath.DefaultVirtualPathProviderTests.TryFileExistsTest" executed="True" success="True" time="0.000" asserts="7" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="FluentDbTests" executed="True" success="True" time="0.281" asserts="0">
                    <results>
                      <test-case name="Orchard.Tests.FluentDbTests.CreatingSchemaForStatedClassesInTempFile" executed="True" success="True" time="0.140" asserts="2" />
                      <test-case name="Orchard.Tests.FluentDbTests.UsingDataUtilityToBuildSessionFactory" executed="True" success="True" time="0.125" asserts="2" />
                    </results>
                  </test-suite>
                  <test-suite name="LinqToNHibernateTests" executed="True" success="True" time="0.172" asserts="0">
                    <results>
                      <test-case name="Orchard.Tests.LinqToNHibernateTests.WhereClauseShouldLimitResults" executed="True" success="True" time="0.172" asserts="4" />
                    </results>
                  </test-suite>
                  <test-suite name="Localization" executed="True" success="True" time="0.359" asserts="0">
                    <results>
                      <test-suite name="CultureManagerTests" executed="True" success="True" time="0.359" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Localization.CultureManagerTests.CultureManagerAcceptsValidDotNetCultureNames" executed="True" success="True" time="0.218" asserts="0" />
                          <test-case name="Orchard.Tests.Localization.CultureManagerTests.CultureManagerCanAddAndListValidCultures" executed="True" success="True" time="0.031" asserts="1" />
                          <test-case name="Orchard.Tests.Localization.CultureManagerTests.CultureManagerRejectsInvalidCultureNames" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Localization.CultureManagerTests.CultureManagerReturnsCultureFromSelector" executed="True" success="True" time="0.016" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="NullLocalizerTests" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Localization.NullLocalizerTests.StringsShouldFormatIfArgumentsArePassedIn" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Localization.NullLocalizerTests.StringsShouldNotFormatWithoutAnyArguments" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Localization.NullLocalizerTests.StringsShouldPassThrough" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Logging" executed="True" success="True" time="0.140" asserts="0">
                    <results>
                      <test-suite name="LoggingModuleTests" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Logging.LoggingModuleTests.DefaultLoggerConfigurationUsesCastleLoggerFactoryOverTraceSource" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="Orchard.Tests.Logging.LoggingModuleTests.LoggerFactoryIsPassedTheTypeOfTheContainingInstance" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Logging.LoggingModuleTests.LoggingModuleWillSetLoggerProperty" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="OrchardFileAppenderTests" executed="True" success="True" time="0.125" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Logging.OrchardFileAppenderTests.AddSuffixTest" executed="True" success="True" time="0.125" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Mvc" executed="True" success="True" time="0.484" asserts="0">
                    <results>
                      <test-suite name="Html" executed="True" success="True" time="0.125" asserts="0">
                        <results>
                          <test-suite name="HtmlHelperExtensionsTests" executed="True" success="True" time="0.125" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.LinkHtmlAttributeEncodesAttributes" executed="True" success="True" time="0.109" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.LinkHtmlAttributeEncodesHref" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.LinkHtmlEncodesLinkText" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.LinkOrDefaultHtmlEncodesLinkText" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.LinkOrDefaultReturnsIHtmlString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.LinkOrDefaultWithHrefHtmlAttributeEncodesHref" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.LinkOrDefaultWithoutHrefHtmlEncodesLinkText" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.LinkReturnsIHtmlString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.SelectOptionHtmlEncodesText" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.UnorderedListWithEmptyItemsReturnsEmptyHtmlString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Html.HtmlHelperExtensionsTests.UnorderedListWithNullItemsReturnsEmptyHtmlString" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="OrchardControllerFactoryTests" executed="True" success="True" time="0.047" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Mvc.OrchardControllerFactoryTests.DisposingControllerThatCameFromContainerShouldNotCauseProblemWhenContainerIsDisposed" executed="True" success="True" time="0.031" asserts="2" />
                          <test-case name="Orchard.Tests.Mvc.OrchardControllerFactoryTests.IContainerProvidersRequestContainerFromRouteDataShouldUseTokenWhenPresent" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Mvc.OrchardControllerFactoryTests.NullServiceKeyReturnsDefault" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Mvc.OrchardControllerFactoryTests.WhenContainerIsPresentButNamedControllerIsNotResolvedNormalControllerFactoryRulesShouldBeUsedAsFallback" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Mvc.OrchardControllerFactoryTests.WhenNullOrMissingContainerNormalControllerFactoryRulesShouldBeUsedAsFallback" executed="False">
                            <reason>
                              <message><![CDATA[OrchardControllerFactory depends on metadata, calling base when no context is causing errors.]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                      <test-suite name="RouteCollectionPublisherTests" executed="True" success="True" time="0.218" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Mvc.RouteCollectionPublisherTests.ExplosionLeavesOriginalRoutesIntact" executed="True" success="True" time="0.047" asserts="2" />
                          <test-case name="Orchard.Tests.Mvc.RouteCollectionPublisherTests.PublisherShouldAddRoutesThenReplaceTheOnesWhichWereAdded" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Mvc.RouteCollectionPublisherTests.RoutesCanHaveNullOrEmptyNames" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Orchard.Tests.Mvc.RouteCollectionPublisherTests.SameNameTwiceCausesExplosion" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Orchard.Tests.Mvc.RouteCollectionPublisherTests.WriteBlocksWhileReadIsInEffect" executed="True" success="True" time="0.156" asserts="3" />
                        </results>
                      </test-suite>
                      <test-suite name="Routes" executed="True" success="True" time="0.094" asserts="0">
                        <results>
                          <test-suite name="ShellRouteTests" executed="True" success="True" time="0.078" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Mvc.Routes.ShellRouteTests.FactoryMethodWillCreateShellRoutes" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="Orchard.Tests.Mvc.Routes.ShellRouteTests.MatchingRouteToActiveShellTableWillLimitTheAbilityToMatchRoutes" executed="True" success="True" time="0.016" asserts="9" />
                              <test-case name="Orchard.Tests.Mvc.Routes.ShellRouteTests.RequestUrlPrefixAdjustsMatchingAndPathGeneration" executed="True" success="True" time="0.047" asserts="29" />
                              <test-case name="Orchard.Tests.Mvc.Routes.ShellRouteTests.RoutePublisherReplacesOnlyNamedShellsRoutes" executed="True" success="True" time="0.016" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite name="StandardExtensionRouteProviderTests" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Mvc.Routes.StandardExtensionRouteProviderTests.ExtensionDisplayNameShouldBeUsedInBothStandardRoutes" executed="True" success="True" time="0.000" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite name="UrlPrefixTests" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Mvc.Routes.UrlPrefixTests.PrependLeadingSegmentsHandlesShortUrlConditionsAppropriately" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.Mvc.Routes.UrlPrefixTests.PrependLeadingSegmentsInsertsBeforeNormalVirtualPath" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Mvc.Routes.UrlPrefixTests.PrependLeadingSegmentsPreservesNatureOfIncomingPath" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.Mvc.Routes.UrlPrefixTests.RemoveLeadingSegmentsCanMatchEntireUrl" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Mvc.Routes.UrlPrefixTests.RemoveLeadingSegmentsIgnoreLeadingAndTrailingCharactersOnInput" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.Mvc.Routes.UrlPrefixTests.RemoveLeadingSegmentsIsCaseInsensitive" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Mvc.Routes.UrlPrefixTests.RemoveLeadingSegmentsMayContainSlash" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.Mvc.Routes.UrlPrefixTests.RemoveLeadingSegmentsOnlyMatchesFullSegment" executed="True" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Security" executed="True" success="True" time="0.078" asserts="0">
                    <results>
                      <test-suite name="DefaultEncryptionServiceTests" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Security.DefaultEncryptionServiceTests.CanEncodeAndDecodeData" executed="True" success="True" time="0.062" asserts="2" />
                          <test-case name="Orchard.Tests.Security.DefaultEncryptionServiceTests.ShouldDetectTamperedData" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Orchard.Tests.Security.DefaultEncryptionServiceTests.SuccessiveEncodeCallsShouldNotReturnTheSameData" executed="True" success="True" time="0.016" asserts="29" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Services" executed="True" success="True" time="0.031" asserts="0">
                    <results>
                      <test-suite name="ClockTests" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Services.ClockTests.StubClockCanBeManuallyAdvanced" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="Orchard.Tests.Services.ClockTests.StubClockShouldComeFromSystemUtcAndDoesNotComeFromSystemTime" executed="True" success="True" time="0.031" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Storage" executed="True" success="True" time="0.265" asserts="0">
                    <results>
                      <test-suite name="FileSystemStorageProviderTests" executed="True" success="True" time="0.265" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.AnySlashInGetFileBecomesEnvironmentAppropriate" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.CreateFileAndDeleteFileTakesAnySlash" executed="True" success="True" time="0.016" asserts="5" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.CreateFileFailsInInvalidPath" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.CreateFolderAndDeleteFolderTakesAnySlash" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.CreateFolderFailsInInvalidPath" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.DeleteFileFailsInInvalidPath" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.DeleteFolderFailsInInvalidPath" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.ExistingFileIsReturnedWithShortPath" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.GetFileFailsInInvalidPath" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.GetFileThatDoesNotExistShouldThrow" executed="True" success="True" time="0.000" asserts="0" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.ListFilesFailsInInvalidPath" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.ListFilesReturnsItemsWithShortPathAndEnvironmentSlashes" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.ListFilesShouldReturnFilesFromFilesystem" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.ListFoldersFailsInInvalidPath" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.ListFoldersReturnsItemsWithShortPathAndEnvironmentSlashes" executed="True" success="True" time="0.000" asserts="4" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.ParentFolderPathIsStillShort" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.RenameFileFailsInInvalidPath" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.RenameFileTakesShortPathWithAnyKindOfSlash" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.RenameFolderFailsInInvalidPath" executed="True" success="True" time="0.047" asserts="5" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.RenameFolderTakesShortPathWithAnyKindOfSlash" executed="True" success="True" time="0.062" asserts="6" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.SaveStreamFailsInInvalidPath" executed="True" success="True" time="0.016" asserts="3" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.ShouldCreateFolders" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.TryCreateFolderFailsInInvalidPath" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="Orchard.Tests.Storage.FileSystemStorageProviderTests.TrySaveStreamFailsInInvalidPath" executed="True" success="True" time="0.016" asserts="3" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Tasks" executed="True" success="True" time="0.109" asserts="0">
                    <results>
                      <test-suite name="SweepGeneratorTests" executed="True" success="True" time="0.109" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Tasks.SweepGeneratorTests.ActivatedEventShouldStartTimer" executed="True" success="True" time="0.109" asserts="0" />
                          <test-case name="Orchard.Tests.Tasks.SweepGeneratorTests.DoWorkShouldSendHeartbeatToTaskManager" executed="True" success="True" time="0.000" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Time" executed="True" success="True" time="0.016" asserts="0">
                    <results>
                      <test-suite name="TimeZoneProviderTests" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Time.TimeZoneProviderTests.DefaultTimeZoneIsLocal" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Orchard.Tests.Time.TimeZoneProviderTests.ShouldProvideCurrentTimeZoneOnly" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tests.Time.TimeZoneProviderTests.TimeZoneProviderReturnsTimeZoneFromSelector" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="UI" executed="True" success="True" time="0.296" asserts="0">
                    <results>
                      <test-suite name="Admin" executed="True" success="True" time="0.062" asserts="0">
                        <results>
                          <test-suite name="AdminAuthorizationFilterTests" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.UI.Admin.AdminAuthorizationFilterTests.AdminRequestShouldRequirePermission" executed="True" success="True" time="0.031" asserts="4" />
                              <test-case name="Orchard.Tests.UI.Admin.AdminAuthorizationFilterTests.InheritedAttribRequestShouldRequirePermission" executed="True" success="True" time="0.016" asserts="4" />
                              <test-case name="Orchard.Tests.UI.Admin.AdminAuthorizationFilterTests.NormalRequestShouldNotBeAffected" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Admin.AdminAuthorizationFilterTests.NormalWithActionAttribRequestShouldRequirePermission" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.UI.Admin.AdminAuthorizationFilterTests.NormalWithAttribRequestShouldRequirePermission" executed="True" success="True" time="0.000" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite name="AdminThemeSelectorTests" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.UI.Admin.AdminThemeSelectorTests.IsAppliedIsFalseOnNewContext" executed="True" success="True" time="0.016" asserts="3" />
                              <test-case name="Orchard.Tests.UI.Admin.AdminThemeSelectorTests.IsAppliedShouldBeFalseByDefault" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Admin.AdminThemeSelectorTests.IsAppliedShouldBeTrueAfterBeingApplied" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.UI.Admin.AdminThemeSelectorTests.ThemeResultShouldBeNullNormally" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Admin.AdminThemeSelectorTests.ThemeResultShouldBeTheAdminAt100AfterBeingSet" executed="True" success="True" time="0.000" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Navigation" executed="True" success="True" time="0.125" asserts="0">
                        <results>
                          <test-suite name="MenuFilterTests" executed="True" success="True" time="0.031" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.UI.Navigation.MenuFilterTests.FindParentLocalTaskScenario2" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Navigation.MenuFilterTests.FindSelectedPathScenario2" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="Orchard.Tests.UI.Navigation.MenuFilterTests.MockNavManagerWorks" executed="True" success="True" time="0.016" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="MenuItemComparerTests" executed="True" success="True" time="0.031" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.UI.Navigation.MenuItemComparerTests.AdditionalPropertiesShouldMismatch" executed="True" success="True" time="0.016" asserts="4" />
                              <test-case name="Orchard.Tests.UI.Navigation.MenuItemComparerTests.NullRouteValuesShouldEqualEmptyRouteValues" executed="True" success="True" time="0.000" asserts="12" />
                              <test-case name="Orchard.Tests.UI.Navigation.MenuItemComparerTests.PositionAndChildrenDontMatter" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="Orchard.Tests.UI.Navigation.MenuItemComparerTests.TextShouldCauseDifferenceAndNullRouteValuesAreEqual" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.UI.Navigation.MenuItemComparerTests.ValuesShouldMismatch" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.UI.Navigation.MenuItemComparerTests.ValueTypeShouldMismatch" executed="True" success="True" time="0.016" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite name="NavigationManagerTests" executed="True" success="True" time="0.062" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.UI.Navigation.NavigationManagerTests.EmptyMenuIfNameDoesntMatch" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Navigation.NavigationManagerTests.NavigationManagerShouldCatchProviderErrors" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Navigation.NavigationManagerTests.NavigationManagerShouldMergeAndOrderNavigation" executed="True" success="True" time="0.031" asserts="12" />
                              <test-case name="Orchard.Tests.UI.Navigation.NavigationManagerTests.NavigationManagerShouldUseProvidersToBuildNamedMenu" executed="True" success="True" time="0.016" asserts="5" />
                            </results>
                          </test-suite>
                          <test-suite name="PositionComparerTests" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.AdditionalNonEmptySegmentsShouldComeLater" executed="True" success="True" time="0.000" asserts="8" />
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.DotsSplitParts" executed="True" success="True" time="0.000" asserts="20" />
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.EmptyBitsAreSafeAndShouldComeFirst" executed="True" success="True" time="0.000" asserts="20" />
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.LessThanAndGreaterThanShouldBeBelowAndAboveZero" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.LongerNonNumericShouldComeLater" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.NegativeNumericValuesAreLessThanPositive" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.NegativeNumericValuesShouldCompareNumerically" executed="True" success="True" time="0.000" asserts="10" />
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.NonNumericValuesCompareOrdinallyAndIgnoreCase" executed="True" success="True" time="0.000" asserts="32" />
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.NullIsLessThanEmptyAndEmptyIsLessThanNonEmpty" executed="True" success="True" time="0.000" asserts="8" />
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.NumericValuesShouldComeBeforeNonNumeric" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="Orchard.Tests.UI.Navigation.PositionComparerTests.NumericValuesShouldCompareNumerically" executed="True" success="True" time="0.000" asserts="10" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Notify" executed="True" success="True" time="0.000" asserts="0">
                        <results>
                          <test-suite name="NotifierTests" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.UI.Notify.NotifierTests.MessageServiceCanAccumulateWarningsAndErrorsToReturn" executed="True" success="True" time="0.000" asserts="4" />
                            </results>
                          </test-suite>
                          <test-suite name="NotifyFilterTests" executed="False">
                            <reason>
                              <message><![CDATA[NotifyFilterTests does not have any tests]]></message>
                            </reason>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Resources" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-suite name="ResourceManagerTests" executed="True" success="True" time="0.078" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.UI.Resources.ResourceManagerTests.CdnDebugPathIsUsedInCdnModeAndDebugMode" executed="True" success="True" time="0.062" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Resources.ResourceManagerTests.CdnPathIsUsedInCdnMode" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Resources.ResourceManagerTests.DebugPathIsUsedInCdnModeAndDebugModeAndThereIsNoCdnDebugPath" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Resources.ResourceManagerTests.DebugPathIsUsedWithDebugMode" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Resources.ResourceManagerTests.DefaultSettingsAreOverriddenByUseDebugMode" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Resources.ResourceManagerTests.DependenciesAreAutoIncluded" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Resources.ResourceManagerTests.DependenciesAssumeTheirParentUseDebugModeSetting" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Resources.ResourceManagerTests.ReleasePathIsTheDefaultPath" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.UI.Resources.ResourceManagerTests.ReleasePathIsUsedWhenNoDebugPath" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ShapeTests" executed="True" success="False" time="0.000" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.UI.ShapeTests.AddingToZoneIndexedMakesItExist" executed="False">
                            <reason>
                              <message><![CDATA[implementation pending]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Orchard.Tests.UI.ShapeTests.AddingToZonePropertyMakesItExist" executed="False">
                            <reason>
                              <message><![CDATA[implementation pending]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Orchard.Tests.UI.ShapeTests.CallingAddOnNilPropertyMakesItBecomeZone" executed="False">
                            <reason>
                              <message><![CDATA[implementation pending]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Orchard.Tests.UI.ShapeTests.NumberIsFortyTwo" executed="False">
                            <reason>
                              <message><![CDATA[implementation pending]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Orchard.Tests.UI.ShapeTests.PagePropertiesAreNil" executed="False">
                            <reason>
                              <message><![CDATA[implementation pending]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Orchard.Tests.UI.ShapeTests.PageZonesPropertyIsNotNil" executed="False">
                            <reason>
                              <message><![CDATA[implementation pending]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Orchard.Tests.UI.ShapeTests.WorkContextPageIsLayoutShape" executed="False">
                            <reason>
                              <message><![CDATA[implementation pending]]></message>
                            </reason>
                          </test-case>
                          <test-case name="Orchard.Tests.UI.ShapeTests.ZoneContentsAreEnumerable" executed="False">
                            <reason>
                              <message><![CDATA[implementation pending]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite name="Utility" executed="True" success="True" time="0.125" asserts="0">
                    <results>
                      <test-suite name="Extensions" executed="True" success="True" time="0.078" asserts="0">
                        <results>
                          <test-suite name="RouteValueDictionaryExtensionsTests" executed="True" success="True" time="0.031" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Utility.Extensions.RouteValueDictionaryExtensionsTests.CasedRouteValueDictionariesShouldMatch" executed="True" success="True" time="0.031" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.RouteValueDictionaryExtensionsTests.IdenticalRouteValueDictionariesShouldMatch" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.RouteValueDictionaryExtensionsTests.RouteValueDictionariesWithDifferentNumbersOfValuesShouldNotMatch" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.RouteValueDictionaryExtensionsTests.RouteValueDictionariesWithDifferentValuesShouldMatch" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="StringExtensionsTests" executed="True" success="True" time="0.047" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.CamelFriendly_CamelCasedStringMadeFriendly" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.CamelFriendly_EmptyStringReturnsEmptyString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.CamelFriendly_LowerCasedStringMadeFriendly" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.CamelFriendly_NullValueReturnsEmptyString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.CamelFriendly_PascalCasedStringMadeFriendly" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.Ellipsize_CustomEllipsisStringIsUsed" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.Ellipsize_EmptyStringReturnsEmptyString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.Ellipsize_LongStringTruncatedToNearestWord" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.Ellipsize_NullValueReturnsEmptyString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.Ellipsize_ShortStringReturnedAsSame" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.Ellipsize_ShouldTuncateToTheExactNumber" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.Ellipsize_TruncatedToWordBoundary" executed="True" success="True" time="0.000" asserts="4" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.HtmlClassify_CompletelyInvalidClassNameReturnsEmptyString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.HtmlClassify_EmptyStringReturnsEmptyString" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.HtmlClassify_LowerCamelCasedStringReturnsLowerHyphenatedClassName" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.HtmlClassify_NullValueReturnsEmptyString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.HtmlClassify_PascalCasedStringReturnsLowerHyphenatedClassName" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.HtmlClassify_SimpleStringReturnsSimpleClassName" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.HtmlClassify_ValidComplexClassNameReturnsSimpleClassName" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.HtmlClassify_ValidReallySimpleClassNameReturnsSame" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.HtmlClassify_ValidSimpleClassNameReturnsSame" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.OrDefault_ReturnsDefaultForNull" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.OrDefault_ReturnsDefaultIfEmpty" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.OrDefault_ReturnsDefaultIfNull" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.OrDefault_ReturnsString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.RemoveTags_EmptyStringReturnsEmptyString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.RemoveTags_NullValueReturnsEmptyString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.RemoveTags_SimpleWellFormedTagsAreRemoved" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.RemoveTags_StringWithNoTagsReturnsSame" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.ReplaceNewLinesWith_EmptyStringReturnsEmptyString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.ReplaceNewLinesWith_NullValueReturnsEmptyString" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.ReplaceNewLinesWith_ReplaceCRLFWithHtmlBR" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Utility.Extensions.StringExtensionsTests.ReplaceNewLinesWith_ReplaceCRLFWithHtmlPsAndCRLF" executed="True" success="True" time="0.016" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ReflectOnTests" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Utility.ReflectOnTests.ReflectOnGetMemberShouldReturnCorrectMemberInfo" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Utility.ReflectOnTests.ReflectOnShouldWorkOnDottedProperties" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Orchard.Tests.Utility.ReflectOnTests.ReflectOnShouldWorkOnFields" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Utility.ReflectOnTests.ReflectOnShouldWorkOnIndexers" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Utility.ReflectOnTests.ReflectOnShouldWorkOnMethods" executed="True" success="True" time="0.016" asserts="6" />
                          <test-case name="Orchard.Tests.Utility.ReflectOnTests.ReflectOnShouldWorkOnProperties" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="ReflectTests" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Orchard.Tests.Utility.ReflectTests.ReflectGetMemberShouldReturnCorrectMemberInfo" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Utility.ReflectTests.ReflectShouldWorkOnFields" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tests.Utility.ReflectTests.ReflectShouldWorkOnMethods" executed="True" success="True" time="0.016" asserts="6" />
                          <test-case name="Orchard.Tests.Utility.ReflectTests.ReflectShouldWorkOnProperties" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Users\Sylvestre\Dropbox\My Documents\Visual Studio 2010\Projects\Orchard\build\Compile\Orchard.Projections.Tests.dll" executed="True" success="True" time="8.861" asserts="0">
        <results>
          <test-suite name="Orchard" executed="True" success="True" time="8.830" asserts="0">
            <results>
              <test-suite name="Projections" executed="True" success="True" time="8.830" asserts="0">
                <results>
                  <test-suite name="Tests" executed="True" success="True" time="8.830" asserts="0">
                    <results>
                      <test-suite name="Services" executed="True" success="True" time="7.675" asserts="0">
                        <results>
                          <test-suite name="FieldIndexServiceTests" executed="True" success="True" time="7.004" asserts="0">
                            <results>
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexServiceTests.BooleanValuesShouldBePersisted" executed="True" success="True" time="5.444" asserts="3" />
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexServiceTests.CharValuesShouldBePersisted" executed="True" success="True" time="0.218" asserts="3" />
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexServiceTests.DateTimeValuesShouldBePersisted" executed="True" success="True" time="0.218" asserts="4" />
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexServiceTests.DecimalValuesShouldBePersisted" executed="True" success="True" time="0.218" asserts="4" />
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexServiceTests.DoubleValuesShouldBePersisted" executed="True" success="True" time="0.234" asserts="6" />
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexServiceTests.EdgeDecimalValuesShouldBePersisted" executed="False">
                                <reason>
                                  <message><![CDATA[SqlCe exception]]></message>
                                </reason>
                              </test-case>
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexServiceTests.FloatValuesShouldBePersisted" executed="True" success="True" time="0.234" asserts="6" />
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexServiceTests.IntegerValuesShouldBePersisted" executed="True" success="True" time="0.234" asserts="6" />
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexServiceTests.StringValuesShouldBePersisted" executed="True" success="True" time="0.203" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite name="FieldIndexStorageTests" executed="True" success="True" time="0.671" asserts="0">
                            <results>
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexStorageTests.CommonDataTypesShouldBeSerialized" executed="True" success="True" time="0.234" asserts="12" />
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexStorageTests.NullValueNamesShouldBeHandled" executed="True" success="True" time="0.156" asserts="1" />
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexStorageTests.StringsShouldBeTruncated" executed="True" success="True" time="0.140" asserts="1" />
                              <test-case name="Orchard.Projections.Tests.Services.FieldIndexStorageTests.ValueThatIsSetIsIndexed" executed="True" success="True" time="0.140" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Settings" executed="True" success="True" time="1.154" asserts="0">
                        <results>
                          <test-suite name="SettingsTests" executed="True" success="True" time="1.154" asserts="0">
                            <results>
                              <test-case name="Orchard.Projections.Tests.Settings.SettingsTests.MergeShouldConcatenateArrays" executed="True" success="True" time="0.936" asserts="4" />
                              <test-case name="Orchard.Projections.Tests.Settings.SettingsTests.MergeShouldOverwriteExistingProperties" executed="True" success="True" time="0.031" asserts="3" />
                              <test-case name="Orchard.Projections.Tests.Settings.SettingsTests.ShouldAddArrays" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Projections.Tests.Settings.SettingsTests.ShouldAddDynamicObjects" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Projections.Tests.Settings.SettingsTests.ShouldAddDynamicProperties" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Projections.Tests.Settings.SettingsTests.ShouldBeEnumerable" executed="True" success="True" time="0.047" asserts="3" />
                              <test-case name="Orchard.Projections.Tests.Settings.SettingsTests.ShouldRemoveMember" executed="True" success="True" time="0.016" asserts="3" />
                              <test-case name="Orchard.Projections.Tests.Settings.SettingsTests.ShouldSerializeAndDeserialize" executed="True" success="True" time="0.062" asserts="1" />
                              <test-case name="Orchard.Projections.Tests.Settings.SettingsTests.ShouldSupportFactoryInvocation" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Projections.Tests.Settings.SettingsTests.UnknownPropertiesShouldBeNull" executed="True" success="True" time="0.000" asserts="2" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Users\Sylvestre\Dropbox\My Documents\Visual Studio 2010\Projects\Orchard\build\Compile\Orchard.Tests.dll" executed="True" success="True" time="0.125" asserts="0">
        <results>
          <test-suite name="Orchard" executed="True" success="True" time="0.125" asserts="0">
            <results>
              <test-suite name="Tests" executed="True" success="True" time="0.125" asserts="0">
                <results>
                  <test-suite name="CommandLineParseTests" executed="True" success="True" time="0.094" asserts="0">
                    <results>
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserBackslashDoesnotEscapeBackslash" executed="True" success="True" time="0.078" asserts="5" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserBackslashDoesnotEscapeOtherCharacters" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserBackslashEscapesQuote" executed="True" success="True" time="0.000" asserts="7" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserGroupsQuotedArguments" executed="True" success="True" time="0.016" asserts="5" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserIgnoresExtraSpaces" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserUnderstandsEmptyArgument" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserUnderstandsEmptyArgument2" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserUnderstandsEmptyArgument3" executed="True" success="True" time="0.000" asserts="3" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserUnderstandsQuotesInsideArgument" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserUnderstandsSimpleArguments" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserUnderstandsTrailingBackslash" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserUnderstandsTrailingBackslash2" executed="True" success="True" time="0.000" asserts="5" />
                      <test-case name="Orchard.Tests.CommandLineParseTests.ParserUnderstandsTrailingQuote" executed="True" success="True" time="0.000" asserts="5" />
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Users\Sylvestre\Dropbox\My Documents\Visual Studio 2010\Projects\Orchard\build\Compile\Orchard.Tests.Modules.dll" executed="True" success="True" time="44.647" asserts="0">
        <results>
          <test-suite name="Orchard" executed="True" success="True" time="44.632" asserts="0">
            <results>
              <test-suite name="Tests" executed="True" success="True" time="44.600" asserts="0">
                <results>
                  <test-suite name="Modules" executed="True" success="True" time="44.600" asserts="0">
                    <results>
                      <test-suite name="CodeGeneration" executed="True" success="True" time="0.281" asserts="0">
                        <results>
                          <test-suite name="Commands" executed="True" success="True" time="0.281" asserts="0">
                            <results>
                              <test-suite name="CodeGenerationCommandsTests" executed="True" success="True" time="0.281" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.CodeGeneration.Commands.CodeGenerationCommandsTests.CreateDataMigrationTestNonExistentFeature" executed="True" success="True" time="0.281" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Comments" executed="True" success="True" time="6.349" asserts="0">
                        <results>
                          <test-suite name="Services" executed="True" success="True" time="6.334" asserts="0">
                            <results>
                              <test-suite name="CommentServiceTests" executed="True" success="True" time="6.334" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Comments.Services.CommentServiceTests.ApproveShouldUpdateCommentStatus" executed="True" success="True" time="4.680" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Comments.Services.CommentServiceTests.CommentedItemShouldHaveACommentPart" executed="True" success="True" time="0.172" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Comments.Services.CommentServiceTests.CommentsShouldBePendingByDefault" executed="True" success="True" time="0.156" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Comments.Services.CommentServiceTests.DeleteShouldRemoveComments" executed="True" success="True" time="0.484" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Comments.Services.CommentServiceTests.GetCommentedContentShouldReturnCommentedContentItem" executed="True" success="True" time="0.156" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Comments.Services.CommentServiceTests.GetCommentsShouldReturnAllComments" executed="True" success="True" time="0.187" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Comments.Services.CommentServiceTests.MarkAsSpamShouldFlagComments" executed="True" success="True" time="0.156" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Comments.Services.CommentServiceTests.UnapproveShouldPendComment" executed="True" success="True" time="0.172" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Comments.Services.CommentServiceTests.UpdateShouldChangeComment" executed="True" success="True" time="0.156" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Email" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-suite name="EmailChannelTests" executed="True" success="True" time="0.031" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Email.EmailChannelTests.CanSendEmailUsingAddresses" executed="True" success="True" time="0.031" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Email.EmailChannelTests.OneMessageIsSentUsingMultipleRecipients" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="ImportExport" executed="True" success="True" time="0.250" asserts="0">
                        <results>
                          <test-suite name="Services" executed="True" success="True" time="0.250" asserts="0">
                            <results>
                              <test-suite name="ImportExportManagerTests" executed="True" success="True" time="0.250" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.ImportExport.Services.ImportExportManagerTests.ImportDoesntFailsWhenRecipeContainsNonImportSteps" executed="True" success="True" time="0.156" asserts="0" />
                                  <test-case name="Orchard.Tests.Modules.ImportExport.Services.ImportExportManagerTests.ImportSucceedsWhenRecipeContainsImportSteps" executed="True" success="True" time="0.000" asserts="0" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Indexing" executed="True" success="True" time="15.163" asserts="0">
                        <results>
                          <test-suite name="IndexingTaskExecutorTests" executed="True" success="True" time="7.972" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Indexing.IndexingTaskExecutorTests.IndexingTaskExecutorShouldNotBeReEntrant" executed="True" success="True" time="0.718" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Indexing.IndexingTaskExecutorTests.IndexShouldBeEmptyWhenThereIsNoContent" executed="True" success="True" time="0.203" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.IndexingTaskExecutorTests.ShouldIgnoreNonIndexableContentWhenRebuildingTheIndex" executed="True" success="True" time="0.234" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.IndexingTaskExecutorTests.ShouldIndexAllContentOverTheLoopSize" executed="True" success="True" time="5.585" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.IndexingTaskExecutorTests.ShouldIndexContentIfSettingsIsSetAndHandlerIsProvided" executed="True" success="True" time="0.218" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.IndexingTaskExecutorTests.ShouldNotIndexContentIfIndexDocumentIsEmpty" executed="True" success="True" time="0.187" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.IndexingTaskExecutorTests.ShouldUpdateTheIndexWhenContentIsDeleted" executed="True" success="True" time="0.281" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Indexing.IndexingTaskExecutorTests.ShouldUpdateTheIndexWhenContentIsPublished" executed="True" success="True" time="0.250" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Indexing.IndexingTaskExecutorTests.ShouldUpdateTheIndexWhenContentIsUnPublished" executed="True" success="True" time="0.265" asserts="3" />
                            </results>
                          </test-suite>
                          <test-suite name="LuceneIndexProviderTests" executed="True" success="True" time="0.624" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.ANewIndexShouldBeEmpty" executed="True" success="True" time="0.031" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.DocumentsShouldBeDeleted" executed="True" success="True" time="0.125" asserts="9" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.DocumentsShouldBeSearchableById" executed="True" success="True" time="0.016" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.IdentifierShouldNotCollide" executed="True" success="True" time="0.062" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.IndexProviderShouldCreateNewIndex" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.IndexProviderShouldDeleteExistingIndex" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.IndexProviderShouldListExistingIndexes" executed="True" success="True" time="0.016" asserts="4" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.IndexProviderShouldOverwriteAlreadyExistingIndex" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.IsDirtyShouldBeFalseForNewDocuments" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.IsDirtyShouldBeTrueWhenIndexIsModified" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.IsEmptyShouldBeFalseWhenThereIsADocument" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.IsEmptyShouldBeTrueForJustNewIndexes" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.IsEmptyShouldBeTrueForNoneExistingIndexes" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.PropertiesShouldNotBeLost" executed="True" success="True" time="0.031" asserts="7" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.SameContentItemShouldNotBeIndexedTwice" executed="True" success="True" time="0.094" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.ShouldAllowNullOrEmptyStrings" executed="True" success="True" time="0.062" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.ShouldHandleMultipleIndexes" executed="True" success="True" time="0.062" asserts="6" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneIndexProviderTests.TagsShouldBeRemoved" executed="True" success="True" time="0.047" asserts="2" />
                            </results>
                          </test-suite>
                          <test-suite name="LuceneSearchBuilderTests" executed="True" success="True" time="6.552" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.AnalyzedFieldsAreNotCaseSensitive" executed="True" success="True" time="0.016" asserts="4" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.FieldsCanContainMultipleValue" executed="True" success="True" time="0.047" asserts="9" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.FiltersShouldNotAlterResults" executed="True" success="True" time="0.156" asserts="11" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.MandatoryCanBeUsedrMultipleTimes" executed="True" success="True" time="0.062" asserts="4" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.NoClauseButAFilter" executed="True" success="True" time="1.232" asserts="6" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.NotAnalyzedFieldsAreSearchable" executed="True" success="True" time="0.031" asserts="6" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ParsedTextShouldBeEscapedByDefault" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ParseQueriesArePrefixedByDefault" executed="True" success="True" time="0.078" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.SearchQueryCanContainMultipleFilters" executed="True" success="True" time="0.062" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.SearchTermsShouldBeFoundInMultipleFields" executed="True" success="True" time="0.031" asserts="5" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldCountResultsOnly" executed="True" success="True" time="0.047" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldEscapeSpecialChars" executed="True" success="True" time="0.047" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldFilterByDate" executed="True" success="True" time="0.094" asserts="6" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldFilterIntValues" executed="True" success="True" time="0.062" asserts="6" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldFilterStoredIntValues" executed="True" success="True" time="0.078" asserts="6" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldHandleForbiddenFields" executed="True" success="True" time="0.047" asserts="4" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldHandleMandatoryFields" executed="True" success="True" time="0.047" asserts="4" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldHandleWeight" executed="True" success="True" time="0.031" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldParseLuceneQueries" executed="True" success="True" time="0.078" asserts="7" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldParseLuceneQueriesWithSpecificFields" executed="True" success="True" time="0.078" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldProvideAvailableFields" executed="True" success="True" time="0.078" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldReturnAllDocuments" executed="True" success="True" time="2.558" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSearchByBooleanWhateverIndexingScheme" executed="True" success="True" time="0.187" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSearchByDateTimeWhateverIndexingScheme" executed="True" success="True" time="0.187" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSearchByFloatWhateverIndexingScheme" executed="True" success="True" time="0.187" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSearchById" executed="True" success="True" time="0.062" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSearchByIntegerWhateverIndexingScheme" executed="True" success="True" time="0.172" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSearchByStringWhateverIndexingScheme" executed="True" success="True" time="0.187" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSearchWithField" executed="True" success="True" time="0.062" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSliceResults" executed="True" success="True" time="0.125" asserts="8" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSortByBoolean" executed="True" success="True" time="0.062" asserts="6" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSortByDate" executed="True" success="True" time="0.062" asserts="7" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSortByDouble" executed="True" success="True" time="0.078" asserts="8" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSortByNumber" executed="True" success="True" time="0.062" asserts="8" />
                              <test-case name="Orchard.Tests.Modules.Indexing.LuceneSearchBuilderTests.ShouldSortByRelevance" executed="True" success="True" time="0.109" asserts="4" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Media" executed="True" success="True" time="0.172" asserts="0">
                        <results>
                          <test-suite name="Extensions" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-suite name="LongExtensionsTests" executed="True" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Media.Extensions.LongExtensionsTests.BytesAreFriendly" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Media.Extensions.LongExtensionsTests.GigabytesAreFriendly" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Media.Extensions.LongExtensionsTests.KilobytesAreFriendly" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Media.Extensions.LongExtensionsTests.MegabytesAreFriendly" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Media.Extensions.LongExtensionsTests.NegativeSizeDoesNotCauseFailure" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Media.Extensions.LongExtensionsTests.PetabytesAreSlightlyFriendlyAsTerabytes" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Media.Extensions.LongExtensionsTests.TerabytesAreFriendly" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Media.Extensions.LongExtensionsTests.VeryLargeSizeDoesNotCauseFailure" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Services" executed="True" success="True" time="0.156" asserts="0">
                            <results>
                              <test-suite name="MediaServiceTests" executed="True" success="True" time="0.156" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Media.Services.MediaServiceTests.GetMediaFoldersTest" executed="True" success="True" time="0.000" asserts="8" />
                                  <test-case name="Orchard.Tests.Modules.Media.Services.MediaServiceTests.GetPublicUrlTests" executed="True" success="True" time="0.016" asserts="3" />
                                  <test-case name="Orchard.Tests.Modules.Media.Services.MediaServiceTests.UnzipMediaFileArchiveAdministratorTest" executed="True" success="True" time="0.125" asserts="10" />
                                  <test-case name="Orchard.Tests.Modules.Media.Services.MediaServiceTests.UnzipMediaFileArchiveNonAdministratorNoWhitelistTest" executed="True" success="True" time="0.016" asserts="8" />
                                  <test-case name="Orchard.Tests.Modules.Media.Services.MediaServiceTests.UnzipMediaFileArchiveNonAdministratorWhitelistTest" executed="True" success="True" time="0.000" asserts="10" />
                                  <test-case name="Orchard.Tests.Modules.Media.Services.MediaServiceTests.UnzipMediaFileArchiveNotNullParametersTest" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Media.Services.MediaServiceTests.WebConfigIsBlackListed" executed="True" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Migrations" executed="True" success="True" time="0.406" asserts="0">
                        <results>
                          <test-suite name="SchemaCommandGeneratorTests" executed="True" success="True" time="0.406" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Migrations.SchemaCommandGeneratorTests.ScaffoldingCommandInterpreterShouldDetectContentParts" executed="True" success="True" time="0.187" asserts="17" />
                              <test-case name="Orchard.Tests.Modules.Migrations.SchemaCommandGeneratorTests.ShouldCreateCreateTableCommands" executed="True" success="True" time="0.047" asserts="14" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Packaging" executed="True" success="True" time="1.747" asserts="0">
                        <results>
                          <test-suite name="Services" executed="True" success="True" time="1.747" asserts="0">
                            <results>
                              <test-suite name="FileBasedProjectSystemTests" executed="True" success="True" time="1.560" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Packaging.Services.FileBasedProjectSystemTests.ValidPathsTest" executed="True" success="True" time="1.560" asserts="5" />
                                </results>
                              </test-suite>
                              <test-suite name="FolderUpdaterTests" executed="True" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Packaging.Services.FolderUpdaterTests.BackupTest" executed="True" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-suite name="PackageBuilderTests" executed="True" success="True" time="0.047" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Packaging.Services.PackageBuilderTests.PackageForModuleIsOpcPackage" executed="True" success="True" time="0.031" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Packaging.Services.PackageBuilderTests.ProjectFileIsAdded" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Packaging.Services.PackageBuilderTests.PropertiesPassThroughAsExpected" executed="True" success="True" time="0.000" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite name="PackageInstallerTests" executed="True" success="True" time="0.140" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Packaging.Services.PackageInstallerTests.InstallTest" executed="True" success="True" time="0.031" asserts="3" />
                                  <test-case name="Orchard.Tests.Modules.Packaging.Services.PackageInstallerTests.InstallUpgradeTest" executed="True" success="True" time="0.078" asserts="10" />
                                  <test-case name="Orchard.Tests.Modules.Packaging.Services.PackageInstallerTests.UninstallTest" executed="True" success="True" time="0.031" asserts="4" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Recipes" executed="True" success="True" time="0.858" asserts="0">
                        <results>
                          <test-suite name="RecipeHandlers" executed="True" success="True" time="0.796" asserts="0">
                            <results>
                              <test-suite name="ModuleRecipeHandlerTest" executed="True" success="True" time="0.515" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Recipes.RecipeHandlers.ModuleRecipeHandlerTest.ExecuteRecipeStepNeedsNameTest" executed="True" success="True" time="0.172" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Recipes.RecipeHandlers.ModuleRecipeHandlerTest.ExecuteRecipeStepTest" executed="True" success="True" time="0.343" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite name="ThemeRecipeHandlerTest" executed="True" success="True" time="0.281" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Recipes.RecipeHandlers.ThemeRecipeHandlerTest.ExecuteRecipeStepNeedsNameTest" executed="True" success="True" time="0.125" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Recipes.RecipeHandlers.ThemeRecipeHandlerTest.ExecuteRecipeStepTest" executed="True" success="True" time="0.156" asserts="5" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Services" executed="True" success="True" time="0.062" asserts="0">
                            <results>
                              <test-suite name="RecipeManagerTests" executed="True" success="True" time="0.062" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Recipes.Services.RecipeManagerTests.ExecuteInvokesHandlersWithSteps" executed="True" success="True" time="0.031" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Recipes.Services.RecipeManagerTests.HarvestRecipesFailsToFindRecipesWhenCalledWithNotExistingExtension" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Recipes.Services.RecipeManagerTests.HarvestRecipesShouldHarvestRecipeXmlFiles" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Recipes.Services.RecipeManagerTests.ParseRecipeLoadsRecipeMetaDataIntoModel" executed="True" success="True" time="0.000" asserts="7" />
                                  <test-case name="Orchard.Tests.Modules.Recipes.Services.RecipeManagerTests.ParseRecipeLoadsRecipeStepsIntoModel" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Recipes.Services.RecipeManagerTests.ParseRecipeThrowsOnInvalidXml" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Roles" executed="True" success="True" time="0.593" asserts="0">
                        <results>
                          <test-suite name="Services" executed="True" success="True" time="0.593" asserts="0">
                            <results>
                              <test-suite name="RoleServiceTests" executed="True" success="True" time="0.593" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Roles.Services.RoleServiceTests.CreateRoleShouldAddToList" executed="True" success="True" time="0.218" asserts="4" />
                                  <test-case name="Orchard.Tests.Modules.Roles.Services.RoleServiceTests.PermissionChangesShouldBeVisibleImmediately" executed="True" success="True" time="0.359" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Scripting" executed="True" success="True" time="4.306" asserts="0">
                        <results>
                          <test-suite name="Dlr" executed="True" success="True" time="4.118" asserts="0">
                            <results>
                              <test-suite name="EvaluatorTests" executed="True" success="True" time="3.838" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateBooleanExpression" executed="True" success="True" time="2.621" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateBooleanExpression0" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateComplexMethodCall" executed="True" success="True" time="0.078" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateComplexMethodCall2" executed="True" success="True" time="0.031" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateComplexMethodCall3" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateComplexMethodCall4" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateComplexMethodCall5" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateComplexMethodCall6" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression" executed="True" success="True" time="0.031" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression1" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression10" executed="True" success="True" time="0.031" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression11" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression12" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression13" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression14" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression15" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression16" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression17" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression18" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression19" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression2" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression20" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression21" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression22" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression23" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression24" executed="True" success="True" time="0.031" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression25" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression26" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression3" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression4" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression5" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression6" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression7" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression8" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateConvertingBooleanExpression9" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateEqualityOperators" executed="True" success="True" time="0.047" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateEqualityOperators2" executed="True" success="True" time="0.031" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateRelationalOperators" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateRelationalOperators10" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateRelationalOperators2" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateRelationalOperators3" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateRelationalOperators4" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateRelationalOperators5" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateRelationalOperators6" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateRelationalOperators7" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateRelationalOperators8" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateRelationalOperators9" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleArithmetic" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleConstant" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleConstant0" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall10" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall11" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall12" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall13" executed="True" success="True" time="0.000" asserts="0" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall14" executed="True" success="True" time="0.031" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall15" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall16" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall17" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall2" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall3" executed="True" success="True" time="0.094" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall4" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall5" executed="True" success="True" time="0.031" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall6" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall7" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall8" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.EvaluatorTests.EvaluateSimpleMethodCall9" executed="True" success="True" time="0.000" asserts="0" />
                                </results>
                              </test-suite>
                              <test-suite name="ScriptingTests" executed="True" success="True" time="0.265" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.ScriptingTests.CanDeclareCallbackOnGlobalMethod" executed="True" success="True" time="0.156" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.ScriptingTests.CanDeclareCallbackOnInstanceEvalWithFile" executed="True" success="True" time="0.031" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.ScriptingTests.CreateScopeReturnsWorkingScope" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.ScriptingTests.ScriptCanBeExecutedAndScopeProvidesContextIsolation" executed="True" success="True" time="0.016" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.ScriptingTests.ScriptingManagerCanEvalExpression" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.ScriptingTests.ScriptingManagerCanExecuteFile" executed="True" success="True" time="0.031" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Scripting.Dlr.ScriptingTests.ScriptingManagerCanGetAndSetRubyVariables" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="EvaluatorTests" executed="True" success="True" time="0.109" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateBooleanExpression" executed="True" success="True" time="0.031" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateBooleanExpression0" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateComplexMethodCall" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateComplexMethodCall2" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateComplexMethodCall3" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateComplexMethodCall4" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateComplexMethodCall5" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateComplexMethodCall6" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression1" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression10" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression11" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression12" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression13" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression14" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression15" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression16" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression17" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression18" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression19" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression2" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression20" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression21" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression22" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression23" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression24" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression25" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression26" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression3" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression4" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression5" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression6" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression7" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression8" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateConvertingBooleanExpression9" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateEqualityOperators" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateEqualityOperators2" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateRelationalOperators" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateRelationalOperators10" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateRelationalOperators2" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateRelationalOperators3" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateRelationalOperators4" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateRelationalOperators5" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateRelationalOperators6" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateRelationalOperators7" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateRelationalOperators8" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateRelationalOperators9" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleArithmetic" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleConstant" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleConstant0" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall10" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall11" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall12" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall13" executed="True" success="True" time="0.000" asserts="0" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall14" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall15" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall16" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall17" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall2" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall3" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall4" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall5" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall6" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall7" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall8" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Scripting.EvaluatorTests.EvaluateSimpleMethodCall9" executed="True" success="True" time="0.000" asserts="0" />
                            </results>
                          </test-suite>
                          <test-suite name="ParserTests" executed="True" success="True" time="0.062" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldContainErrorExpressions" executed="True" success="True" time="0.016" asserts="4" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldContainErrorExpressions2" executed="True" success="True" time="0.000" asserts="8" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldIgnoreWhitespaces" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandBinaryExpressions" executed="True" success="True" time="0.000" asserts="9" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandCallExpressions" executed="True" success="True" time="0.000" asserts="10" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandCallExpressions2" executed="True" success="True" time="0.000" asserts="12" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandCommandExpressions" executed="True" success="True" time="0.016" asserts="10" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandComplexExpressions" executed="True" success="True" time="0.000" asserts="23" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandConstantExpressions" executed="True" success="True" time="0.000" asserts="5" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandOperatorPrecedence" executed="True" success="True" time="0.000" asserts="13" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandOperatorPrecedence2" executed="True" success="True" time="0.000" asserts="13" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandOperatorPrecedence3" executed="True" success="True" time="0.000" asserts="11" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandOperatorPrecedence4" executed="True" success="True" time="0.000" asserts="11" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandOperatorPrecedence5" executed="True" success="True" time="0.000" asserts="13" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandOperatorPrecedence6" executed="True" success="True" time="0.000" asserts="13" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandParenthesis" executed="True" success="True" time="0.000" asserts="13" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandRelationalOperatorPrecedence" executed="True" success="True" time="0.000" asserts="23" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandRelationalOperatorPrecedence2" executed="True" success="True" time="0.000" asserts="23" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandRelationalOperators" executed="True" success="True" time="0.000" asserts="9" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandRelationalOperators2" executed="True" success="True" time="0.000" asserts="9" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandRelationalOperators3" executed="True" success="True" time="0.000" asserts="9" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandRelationalOperators4" executed="True" success="True" time="0.000" asserts="9" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandRelationalOperators5" executed="True" success="True" time="0.000" asserts="9" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandRelationalOperators6" executed="True" success="True" time="0.000" asserts="9" />
                              <test-case name="Orchard.Tests.Modules.Scripting.ParserTests.ParserShouldUnderstandRelationalOperators7" executed="True" success="True" time="0.000" asserts="9" />
                            </results>
                          </test-suite>
                          <test-suite name="SimpleScriptingTests" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Scripting.SimpleScriptingTests.EngineThrowsSyntaxErrors" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Scripting.SimpleScriptingTests.EngineUnderstandsPrimitiveValues" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Scripting.SimpleScriptingTests.EngineUnderstandsPrimitiveValues2" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="TokenizerTests" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Scripting.TokenizerTests.LexerShouldProcesSequenceOfTokens" executed="True" success="True" time="0.000" asserts="7" />
                              <test-case name="Orchard.Tests.Modules.Scripting.TokenizerTests.LexerShouldProcesSequenceOfTokens2" executed="True" success="True" time="0.000" asserts="6" />
                              <test-case name="Orchard.Tests.Modules.Scripting.TokenizerTests.LexerShouldProcesSequenceOfTokens3" executed="True" success="True" time="0.000" asserts="9" />
                              <test-case name="Orchard.Tests.Modules.Scripting.TokenizerTests.LexerShouldProcessReservedWords" executed="True" success="True" time="0.000" asserts="21" />
                              <test-case name="Orchard.Tests.Modules.Scripting.TokenizerTests.LexerShouldProcessSingleQuotedStringLiteral" executed="True" success="True" time="0.000" asserts="12" />
                              <test-case name="Orchard.Tests.Modules.Scripting.TokenizerTests.LexerShouldProcessStringLiteral" executed="True" success="True" time="0.000" asserts="12" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Settings" executed="True" success="True" time="0.811" asserts="0">
                        <results>
                          <test-suite name="Blueprint" executed="True" success="True" time="0.811" asserts="0">
                            <results>
                              <test-suite name="ShellDescriptorManagerTests" executed="True" success="True" time="0.811" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Settings.Blueprint.ShellDescriptorManagerTests.BlueprintShouldBeNullWhenItsNotInitialized" executed="True" success="True" time="0.125" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Settings.Blueprint.ShellDescriptorManagerTests.ManagerReturnsStateForFeaturesInDescriptor" executed="True" success="True" time="0.140" asserts="3" />
                                  <test-case name="Orchard.Tests.Modules.Settings.Blueprint.ShellDescriptorManagerTests.NonZeroInitialUpdateThrowsInvalidOperationException" executed="True" success="True" time="0.125" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Settings.Blueprint.ShellDescriptorManagerTests.OnlyCorrectSerialNumberOnLaterUpdatesDoesNotThrowException" executed="True" success="True" time="0.156" asserts="8" />
                                  <test-case name="Orchard.Tests.Modules.Settings.Blueprint.ShellDescriptorManagerTests.PriorSerialNumberOfZeroIsAcceptableForInitialUpdateAndSerialNumberIsNonzeroAfterwards" executed="True" success="True" time="0.140" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Settings.Blueprint.ShellDescriptorManagerTests.SuccessfulUpdateRaisesAnEvent" executed="True" success="True" time="0.125" asserts="4" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Tags" executed="True" success="True" time="1.700" asserts="0">
                        <results>
                          <test-suite name="Services" executed="True" success="True" time="1.700" asserts="0">
                            <results>
                              <test-suite name="TagsServiceTests" executed="True" success="True" time="1.700" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Tags.Services.TagsServiceTests.ContentItemsShouldBeReturnedFromTagService" executed="True" success="True" time="0.359" asserts="10" />
                                  <test-case name="Orchard.Tests.Modules.Tags.Services.TagsServiceTests.CreateTagShouldBePersistent" executed="True" success="True" time="0.172" asserts="3" />
                                  <test-case name="Orchard.Tests.Modules.Tags.Services.TagsServiceTests.RenamingATagShouldMergeTaggedItems" executed="True" success="True" time="0.234" asserts="9" />
                                  <test-case name="Orchard.Tests.Modules.Tags.Services.TagsServiceTests.TagsAssociationsShouldBeCreatedCorrectly" executed="True" success="True" time="0.218" asserts="18" />
                                  <test-case name="Orchard.Tests.Modules.Tags.Services.TagsServiceTests.TagsDeletionShouldDeleteTagsAndAssociations" executed="True" success="True" time="0.218" asserts="11" />
                                  <test-case name="Orchard.Tests.Modules.Tags.Services.TagsServiceTests.TagServiceShouldResolve" executed="True" success="True" time="0.125" asserts="0" />
                                  <test-case name="Orchard.Tests.Modules.Tags.Services.TagsServiceTests.TagsShouldBeAvailableWhenGettingContentItem" executed="True" success="True" time="0.172" asserts="3" />
                                  <test-case name="Orchard.Tests.Modules.Tags.Services.TagsServiceTests.TagsShouldDeletedAferRemovingContentItem" executed="True" success="True" time="0.203" asserts="6" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Users" executed="True" success="True" time="7.753" asserts="0">
                        <results>
                          <test-suite name="Controllers" executed="True" success="True" time="7.332" asserts="0">
                            <results>
                              <test-suite name="AccountControllerTests" executed="True" success="True" time="7.332" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.ChallengeEmailShouldUnlockAccount" executed="False">
                                    <reason>
                                      <message><![CDATA[To be implemented]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.InvalidLostPasswordRequestShouldNotResultInAnError" executed="True" success="True" time="0.577" asserts="3" />
                                  <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.LostPasswordEmailShouldAuthenticateUser" executed="False">
                                    <reason>
                                      <message><![CDATA[To be implemented]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.RegisteredUserShouldBeModerated" executed="True" success="True" time="0.218" asserts="3" />
                                  <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.RegisteredUserShouldBeRedirectedToHomePage" executed="True" success="True" time="0.218" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.ResetPasswordLinkShouldBeSent" executed="True" success="True" time="0.312" asserts="3" />
                                  <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.SuperAdminShouldReceiveAMessageOnUserRegistration" executed="True" success="True" time="0.250" asserts="8" />
                                  <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfAllowed" executed="True" success="True" time="0.421" asserts="1" />
                                  <test-suite name="UsersShouldBeAbleToRegisterIfValidEmail" executed="True" success="True" time="2.902" asserts="0">
                                    <results>
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;\&quot;test\\\\blah\&quot;@example.com&quot;)" executed="True" success="True" time="0.234" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;\&quot;test\\\rblah\&quot;@example.com&quot;)" executed="True" success="True" time="0.234" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;\&quot;test\\\&quot;blah\&quot;@example.com&quot;)" executed="True" success="True" time="0.218" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;customer/department@example.com&quot;)" executed="True" success="True" time="0.265" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;$A12345@example.com&quot;)" executed="True" success="True" time="0.234" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;!def!xyz%abc@example.com&quot;)" executed="True" success="True" time="0.250" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;_Yosemite.Sam@example.com&quot;)" executed="True" success="True" time="0.218" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;~@example.com&quot;)" executed="True" success="True" time="0.218" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;\&quot;Austin@Powers\&quot;@example.com&quot;)" executed="True" success="True" time="0.218" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;Ima.Fool@example.com&quot;)" executed="True" success="True" time="0.343" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;\&quot;Ima.Fool\&quot;@example.com&quot;)" executed="True" success="True" time="0.234" asserts="2" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldBeAbleToRegisterIfValidEmail(&quot;\&quot;Ima Fool\&quot;@example.com&quot;)" executed="True" success="True" time="0.218" asserts="2" />
                                    </results>
                                  </test-suite>
                                  <test-suite name="UsersShouldNotBeAbleToRegisterIfInvalidEmail" executed="True" success="True" time="2.215" asserts="0">
                                    <results>
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfInvalidEmail(&quot;NotAnEmail&quot;)" executed="True" success="True" time="0.234" asserts="1" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfInvalidEmail(&quot;@NotAnEmail&quot;)" executed="True" success="True" time="0.218" asserts="1" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfInvalidEmail(&quot;\&quot;test\\blah\&quot;@example.com&quot;)" executed="True" success="True" time="0.203" asserts="1" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfInvalidEmail(&quot;\&quot;test\rblah\&quot;@example.com&quot;)" executed="True" success="True" time="0.218" asserts="1" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfInvalidEmail(&quot;\&quot;test\&quot;blah\&quot;@example.com&quot;)" executed="True" success="True" time="0.218" asserts="1" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfInvalidEmail(&quot;.wooly@example.com&quot;)" executed="True" success="True" time="0.218" asserts="1" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfInvalidEmail(&quot;wo..oly@example.com&quot;)" executed="True" success="True" time="0.218" asserts="1" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfInvalidEmail(&quot;pootietang.@example.com&quot;)" executed="True" success="True" time="0.218" asserts="1" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfInvalidEmail(&quot;.@example.com&quot;)" executed="True" success="True" time="0.218" asserts="1" />
                                      <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfInvalidEmail(&quot;Ima Fool@example.com&quot;)" executed="True" success="True" time="0.218" asserts="1" />
                                    </results>
                                  </test-suite>
                                  <test-case name="Orchard.Tests.Modules.Users.Controllers.AccountControllerTests.UsersShouldNotBeAbleToRegisterIfNotAllowed" executed="True" success="True" time="0.218" asserts="2" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Services" executed="True" success="True" time="0.421" asserts="0">
                            <results>
                              <test-suite name="MembershipServiceTests" executed="True" success="True" time="0.296" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Users.Services.MembershipServiceTests.CreateUserShouldAllocateModelAndCreateRecords" executed="True" success="True" time="0.078" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Users.Services.MembershipServiceTests.DefaultPasswordFormatShouldBeHashedAndHaveSalt" executed="True" success="True" time="0.016" asserts="4" />
                                  <test-case name="Orchard.Tests.Modules.Users.Services.MembershipServiceTests.SaltAndPasswordShouldBeDifferentEvenWithSameSourcePassword" executed="True" success="True" time="0.047" asserts="4" />
                                  <test-case name="Orchard.Tests.Modules.Users.Services.MembershipServiceTests.ValidateUserShouldReturnNullIfUserOrPasswordIsIncorrect" executed="True" success="True" time="0.031" asserts="3" />
                                </results>
                              </test-suite>
                              <test-suite name="UserServiceTests" executed="True" success="True" time="0.125" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Users.Services.UserServiceTests.NonceShouldBeDecryptable" executed="True" success="True" time="0.047" asserts="4" />
                                  <test-case name="Orchard.Tests.Modules.Users.Services.UserServiceTests.VerifyUserUnicityTurkishTest" executed="True" success="True" time="0.016" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Warmup" executed="True" success="True" time="2.434" asserts="0">
                        <results>
                          <test-suite name="WarmupUpdaterTests" executed="True" success="True" time="0.281" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.ClearingUrlsShouldDeleteContent" executed="True" success="True" time="0.109" asserts="5" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.GenerateShouldNotRunIfLocked" executed="True" success="True" time="0.000" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.ReportIsCreated" executed="True" success="True" time="0.016" asserts="7" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.ShouldCreateFilesForOkStatusOnly" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.ShouldDoNothingWhenNoUrlsAreSpecified" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.ShouldDownloadConfiguredUrls" executed="True" success="True" time="0.016" asserts="6" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.ShouldGenerateNonWwwVersions" executed="True" success="True" time="0.016" asserts="8" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.ShouldNotDeleteOtherFiles" executed="True" success="True" time="0.031" asserts="5" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.ShouldNotProcessIfDelayHasNotExpired" executed="True" success="True" time="0.016" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.ShouldProcessIfDelayHasExpired" executed="True" success="True" time="0.016" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.ShouldProcessValidRequestsOnly" executed="True" success="True" time="0.016" asserts="2" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.StampFileShouldBeDeletedToForceAnUpdate" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WarmupUpdaterTests.WarmupFileShouldContainUtcNow" executed="True" success="True" time="0.016" asserts="1" />
                            </results>
                          </test-suite>
                          <test-suite name="WebDownloaderTests" executed="True" success="True" time="2.153" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Warmup.WebDownloaderTests.ShouldReturnNullWhenUrlIsEmpty" executed="True" success="True" time="0.000" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WebDownloaderTests.ShouldReturnNullWhenUrlIsInvalid" executed="True" success="True" time="0.016" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WebDownloaderTests.StatusCodeShouldBe200ForValidRequests" executed="True" success="True" time="1.404" asserts="3" />
                              <test-case name="Orchard.Tests.Modules.Warmup.WebDownloaderTests.StatusCodeShouldBe404ForUnexistingResources" executed="True" success="True" time="0.733" asserts="3" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="Widgets" executed="True" success="True" time="1.607" asserts="0">
                        <results>
                          <test-suite name="RuleEngine" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-suite name="UrlRuleProviderTest" executed="True" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Widgets.RuleEngine.UrlRuleProviderTest.UrlForAboutPageMatchesAboutPagePath" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.RuleEngine.UrlRuleProviderTest.UrlForAboutPageMatchesDifferentCasedAboutPagePath" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.RuleEngine.UrlRuleProviderTest.UrlForAboutPageWithEndingSlashMatchesAboutPagePath" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.RuleEngine.UrlRuleProviderTest.UrlForBlogWithEndingWildcardMatchesBlogPostPageInSaidBlog" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.RuleEngine.UrlRuleProviderTest.UrlForHomePageDoesNotMatchAboutPagePath" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.RuleEngine.UrlRuleProviderTest.UrlForHomePageMatchesHomePagePath" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.RuleEngine.UrlRuleProviderTest.UrlForHomePageMatchesHomePagePathWithUrlPrefix" executed="True" success="True" time="0.016" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Services" executed="True" success="True" time="1.591" asserts="0">
                            <results>
                              <test-suite name="WidgetsServiceTest" executed="True" success="True" time="1.591" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.Widgets.Services.WidgetsServiceTest.CreateLayerTest" executed="True" success="True" time="0.234" asserts="3" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.Services.WidgetsServiceTest.CreateWidgetTest" executed="True" success="True" time="0.234" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.Services.WidgetsServiceTest.GetLayersTest" executed="True" success="True" time="0.218" asserts="4" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.Services.WidgetsServiceTest.GetLayerTest" executed="True" success="True" time="0.218" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.Services.WidgetsServiceTest.GetLayerWidgetsTest" executed="False">
                                    <reason>
                                      <message><![CDATA[Fix when possible]]></message>
                                    </reason>
                                  </test-case>
                                  <test-case name="Orchard.Tests.Modules.Widgets.Services.WidgetsServiceTest.GetWidgetsTest" executed="True" success="True" time="0.234" asserts="5" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.Services.WidgetsServiceTest.GetWidgetTest" executed="True" success="True" time="0.234" asserts="4" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.Services.WidgetsServiceTest.GetZonesTest" executed="True" success="True" time="0.218" asserts="3" />
                                  <test-case name="Orchard.Tests.Modules.Widgets.Services.WidgetsServiceTest.MoveWidgetTest" executed="False">
                                    <reason>
                                      <message><![CDATA[Fix when possible]]></message>
                                    </reason>
                                  </test-case>
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="WidgetsTests" executed="True" success="True" time="0.000" asserts="0">
                            <results>
                              <test-case name="Orchard.Tests.Modules.Widgets.WidgetsTests.ArgumentsArePassedCorrectly" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Widgets.WidgetsTests.ProviderGetsCalledForExpression" executed="True" success="True" time="0.000" asserts="1" />
                              <test-case name="Orchard.Tests.Modules.Widgets.WidgetsTests.RubyExpressionIsEvaluated" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                      <test-suite name="XmlRpc" executed="True" success="True" time="0.062" asserts="0">
                        <results>
                          <test-suite name="Controllers" executed="True" success="True" time="0.016" asserts="0">
                            <results>
                              <test-suite name="HomeControllerTests" executed="True" success="True" time="0.000" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.XmlRpc.Controllers.HomeControllerTests.RequestShouldBeDispatchedToAllHandlers" executed="True" success="True" time="0.000" asserts="5" />
                                </results>
                              </test-suite>
                              <test-suite name="LiveWriterControllerTests" executed="True" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.XmlRpc.Controllers.LiveWriterControllerTests.HandlersShouldSetCapabilitiesForManifest" executed="True" success="True" time="0.000" asserts="4" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                          <test-suite name="Services" executed="True" success="True" time="0.031" asserts="0">
                            <results>
                              <test-suite name="XmlRpcReaderTests" executed="True" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.XmlRpc.Services.XmlRpcReaderTests.ArrayShouldBringDataItemsWithCorrectType" executed="True" success="True" time="0.000" asserts="5" />
                                  <test-case name="Orchard.Tests.Modules.XmlRpc.Services.XmlRpcReaderTests.CallWithParametersShouldMapValuesAccordingToSpec" executed="True" success="True" time="0.016" asserts="10" />
                                  <test-case name="Orchard.Tests.Modules.XmlRpc.Services.XmlRpcReaderTests.MethodCallShouldMapName" executed="True" success="True" time="0.000" asserts="2" />
                                  <test-case name="Orchard.Tests.Modules.XmlRpc.Services.XmlRpcReaderTests.StructShouldMapAllMembersByNameWithCorrectType" executed="True" success="True" time="0.000" asserts="8" />
                                  <test-case name="Orchard.Tests.Modules.XmlRpc.Services.XmlRpcReaderTests.StructShouldMapDefaultDateTimeWithBadFormat" executed="True" success="True" time="0.000" asserts="2" />
                                </results>
                              </test-suite>
                              <test-suite name="XmlRpcWriterTests" executed="True" success="True" time="0.016" asserts="0">
                                <results>
                                  <test-case name="Orchard.Tests.Modules.XmlRpc.Services.XmlRpcWriterTests.ArrayAndStructShouldWorkAsExpected" executed="True" success="True" time="0.016" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.XmlRpc.Services.XmlRpcWriterTests.FaultShouldBeCorrectlyFormatted" executed="True" success="True" time="0.000" asserts="1" />
                                  <test-case name="Orchard.Tests.Modules.XmlRpc.Services.XmlRpcWriterTests.MethodResponseWriterShouldSendParametersWithValues" executed="True" success="True" time="0.000" asserts="1" />
                                </results>
                              </test-suite>
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Users\Sylvestre\Dropbox\My Documents\Visual Studio 2010\Projects\Orchard\build\Compile\Orchard.Tokens.Tests.dll" executed="True" success="True" time="0.608" asserts="0">
        <results>
          <test-suite name="Orchard" executed="True" success="True" time="0.593" asserts="0">
            <results>
              <test-suite name="Tokens" executed="True" success="True" time="0.593" asserts="0">
                <results>
                  <test-suite name="Tests" executed="True" success="True" time="0.593" asserts="0">
                    <results>
                      <test-suite name="DateTokenTests" executed="True" success="True" time="0.515" asserts="0">
                        <results>
                          <test-case name="Orchard.Tokens.Tests.DateTokenTests.TestDateTokens" executed="True" success="True" time="0.499" asserts="2" />
                          <test-case name="Orchard.Tokens.Tests.DateTokenTests.TestFormat" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tokens.Tests.DateTokenTests.TestSince" executed="True" success="True" time="0.000" asserts="1" />
                        </results>
                      </test-suite>
                      <test-suite name="TokenizerTests" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Orchard.Tokens.Tests.TokenizerTests.TestChainedTokens" executed="True" success="True" time="0.016" asserts="4" />
                          <test-case name="Orchard.Tokens.Tests.TokenizerTests.TestContextTokens" executed="True" success="True" time="0.000" asserts="2" />
                          <test-case name="Orchard.Tokens.Tests.TokenizerTests.TestGlobalTokens" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="Orchard.Tokens.Tests.TokenizerTests.TestHtmlEncodedByDefault" executed="True" success="True" time="0.016" asserts="1" />
                          <test-case name="Orchard.Tokens.Tests.TokenizerTests.TestMissingTokens" executed="True" success="True" time="0.000" asserts="5" />
                          <test-case name="Orchard.Tokens.Tests.TokenizerTests.TestNoEncode" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tokens.Tests.TokenizerTests.TestPredicate" executed="True" success="True" time="0.000" asserts="1" />
                          <test-case name="Orchard.Tokens.Tests.TokenizerTests.TestTokenCaseSensitivity" executed="True" success="True" time="0.000" asserts="3" />
                          <test-case name="Orchard.Tokens.Tests.TokenizerTests.TestTokenEscapeSequences" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="TokenManagerTests" executed="True" success="True" time="0.031" asserts="0">
                        <results>
                          <test-case name="Orchard.Tokens.Tests.TokenManagerTests.TestDescribe" executed="True" success="True" time="0.031" asserts="19" />
                          <test-case name="Orchard.Tokens.Tests.TokenManagerTests.TestDescribeFilter" executed="True" success="True" time="0.000" asserts="6" />
                          <test-case name="Orchard.Tokens.Tests.TokenManagerTests.TestEvaluate" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                      <test-suite name="UserTokenTests" executed="True" success="True" time="0.016" asserts="0">
                        <results>
                          <test-case name="Orchard.Tokens.Tests.UserTokenTests.AnonymousUserShouldReturnEmpty" executed="True" success="True" time="0.016" asserts="2" />
                          <test-case name="Orchard.Tokens.Tests.UserTokenTests.TestUserTokens" executed="True" success="True" time="0.000" asserts="2" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
      <test-suite name="C:\Users\Sylvestre\Dropbox\My Documents\Visual Studio 2010\Projects\Orchard\build\Compile\Orchard.Web.Tests.dll" executed="True" success="True" time="0.125" asserts="0">
        <results>
          <test-suite name="Orchard" executed="True" success="True" time="0.125" asserts="0">
            <results>
              <test-suite name="Web" executed="True" success="True" time="0.125" asserts="0">
                <results>
                  <test-suite name="Tests" executed="True" success="True" time="0.125" asserts="0">
                    <results>
                      <test-suite name="Routes" executed="True" success="True" time="0.125" asserts="0">
                        <results>
                          <test-suite name="RouteTests" executed="True" success="True" time="0.125" asserts="0">
                            <results>
                              <test-case name="Orchard.Web.Tests.Routes.RouteTests.RouteForEmbeddedResource" executed="True" success="True" time="0.109" asserts="2" />
                              <test-case name="Orchard.Web.Tests.Routes.RouteTests.RouteWithTooManySegments" executed="True" success="True" time="0.000" asserts="1" />
                            </results>
                          </test-suite>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>